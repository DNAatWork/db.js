{"version":3,"sources":["../src/db.js"],"names":[],"mappings":"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","file":"db.js","sourcesContent":["(function (window) {\r\n    'use strict';\r\n\r\n    const IDBKeyRange = window.IDBKeyRange || window.webkitIDBKeyRange;\r\n    const transactionModes = {\r\n        readonly: 'readonly',\r\n        readwrite: 'readwrite'\r\n    };\r\n    const hasOwn = Object.prototype.hasOwnProperty;\r\n    const defaultMapper = x => x;\r\n\r\n    let indexedDB = (function () {\r\n        if (!indexedDB) {\r\n            indexedDB = window.indexedDB || window.webkitIndexedDB || window.mozIndexedDB || window.oIndexedDB || window.msIndexedDB || window.shimIndexedDB;\r\n\r\n            if (!indexedDB) {\r\n                throw new Error('IndexedDB required');\r\n            }\r\n        }\r\n        return indexedDB;\r\n    })();\r\n\r\n    const dbCache = {};\r\n    const isArray = Array.isArray;\r\n\r\n    function mongoDBToKeyRangeArgs (opts) {\r\n        var keys = Object.keys(opts).sort();\r\n        if (keys.length === 1) {\r\n            var key = keys[0];\r\n            var val = opts[key];\r\n            var name, inclusive;\r\n            switch (key) {\r\n            case 'eq': name = 'only'; break;\r\n            case 'gt':\r\n                name = 'lowerBound';\r\n                inclusive = true;\r\n                break;\r\n            case 'lt':\r\n                name = 'upperBound';\r\n                inclusive = true;\r\n                break;\r\n            case 'gte': name = 'lowerBound'; break;\r\n            case 'lte': name = 'upperBound'; break;\r\n            default: throw new TypeError('`' + key + '` is not valid key');\r\n            }\r\n            return [name, [val, inclusive]];\r\n        }\r\n        var x = opts[keys[0]];\r\n        var y = opts[keys[1]];\r\n        var pattern = keys.join('-');\r\n\r\n        switch (pattern) {\r\n        case 'gt-lt': case 'gt-lte': case 'gte-lt': case 'gte-lte':\r\n            return ['bound', [x, y, keys[0] === 'gt', keys[1] === 'lt']];\r\n        default: throw new TypeError(\r\n          '`' + pattern + '` are conflicted keys'\r\n        );\r\n        }\r\n    }\r\n    function mongoifyKey (key) {\r\n        if (key && typeof key === 'object' && !(key instanceof IDBKeyRange)) {\r\n            let [type, args] = mongoDBToKeyRangeArgs(key);\r\n            return IDBKeyRange[type](...args);\r\n        }\r\n        return key;\r\n    }\r\n\r\n    var Server = function (db, name, noServerMethods) {\r\n        var closed = false;\r\n\r\n        this.getIndexedDB = () => db;\r\n        this.isClosed = () => closed;\r\n\r\n        this.add = function (table, ...args) {\r\n            return new Promise(function (resolve, reject) {\r\n                if (closed) {\r\n                    reject('Database has been closed');\r\n                    return;\r\n                }\r\n\r\n                var records = [];\r\n\r\n                args.forEach(function (aip) {\r\n                    if (isArray(aip)) {\r\n                        records = records.concat(aip);\r\n                    } else {\r\n                        records.push(aip);\r\n                    }\r\n                });\r\n\r\n                var transaction = db.transaction(table, transactionModes.readwrite);\r\n                var store = transaction.objectStore(table);\r\n\r\n                records.forEach(function (record) {\r\n                    var req;\r\n                    if (record.item && record.key) {\r\n                        var key = record.key;\r\n                        record = record.item;\r\n                        req = store.add(record, key);\r\n                    } else {\r\n                        req = store.add(record);\r\n                    }\r\n\r\n                    req.onsuccess = function (e) {\r\n                        var target = e.target;\r\n                        var keyPath = target.source.keyPath;\r\n                        if (keyPath === null) {\r\n                            keyPath = '__id__';\r\n                        }\r\n                        Object.defineProperty(record, keyPath, {\r\n                            value: target.result,\r\n                            enumerable: true\r\n                        });\r\n                    };\r\n                });\r\n\r\n                transaction.oncomplete = () => resolve(records, this);\r\n\r\n                transaction.onerror = e => {\r\n                    // prevent Firefox from throwing a ConstraintError and aborting (hard)\r\n                    // https://bugzilla.mozilla.org/show_bug.cgi?id=872873\r\n                    e.preventDefault();\r\n                    reject(e);\r\n                };\r\n                transaction.onabort = e => reject(e);\r\n            });\r\n        };\r\n\r\n        this.update = function (table, ...args) {\r\n            return new Promise(function (resolve, reject) {\r\n                if (closed) {\r\n                    reject('Database has been closed');\r\n                    return;\r\n                }\r\n\r\n                var transaction = db.transaction(table, transactionModes.readwrite);\r\n                var store = transaction.objectStore(table);\r\n                var records = [];\r\n\r\n                args.forEach(function (aip) {\r\n                    if (isArray(aip)) {\r\n                        records = records.concat(aip);\r\n                    } else {\r\n                        records.push(aip);\r\n                    }\r\n                });\r\n                records.forEach(function (record) {\r\n                    if (record.item && record.key) {\r\n                        var key = record.key;\r\n                        record = record.item;\r\n                        store.put(record, key);\r\n                    } else {\r\n                        store.put(record);\r\n                    }\r\n                });\r\n\r\n                transaction.oncomplete = () => resolve(records, this);\r\n                transaction.onerror = e => reject(e);\r\n                transaction.onabort = e => reject(e);\r\n            });\r\n        };\r\n\r\n        this.remove = function (table, key) {\r\n            return new Promise(function (resolve, reject) {\r\n                if (closed) {\r\n                    reject('Database has been closed');\r\n                    return;\r\n                }\r\n                var transaction = db.transaction(table, transactionModes.readwrite);\r\n                var store = transaction.objectStore(table);\r\n\r\n                store.delete(key);\r\n                transaction.oncomplete = () => resolve(key);\r\n                transaction.onerror = e => reject(e);\r\n                transaction.onabort = e => reject(e);\r\n            });\r\n        };\r\n\r\n        this.clear = function (table) {\r\n            return new Promise(function (resolve, reject) {\r\n                if (closed) {\r\n                    reject('Database has been closed');\r\n                    return;\r\n                }\r\n                var transaction = db.transaction(table, transactionModes.readwrite);\r\n                var store = transaction.objectStore(table);\r\n\r\n                store.clear();\r\n                transaction.oncomplete = () => resolve();\r\n                transaction.onerror = e => reject(e);\r\n                transaction.onabort = e => reject(e);\r\n            });\r\n        };\r\n\r\n        this.close = function () {\r\n            return new Promise(function (resolve, reject) {\r\n                if (closed) {\r\n                    reject('Database has been closed');\r\n                }\r\n                db.close();\r\n                closed = true;\r\n                delete dbCache[name];\r\n                resolve();\r\n            });\r\n        };\r\n\r\n        this.get = function (table, key) {\r\n            return new Promise(function (resolve, reject) {\r\n                if (closed) {\r\n                    reject('Database has been closed');\r\n                    return;\r\n                }\r\n                var transaction = db.transaction(table);\r\n                var store = transaction.objectStore(table);\r\n\r\n                try {\r\n                    key = mongoifyKey(key);\r\n                } catch (e) {\r\n                    reject(e);\r\n                }\r\n                var req = store.get(key);\r\n                req.onsuccess = e => resolve(e.target.result);\r\n                transaction.onerror = e => reject(e);\r\n                transaction.onabort = e => reject(e);\r\n            });\r\n        };\r\n\r\n        this.query = function (table, index) {\r\n            var error = closed ? 'Database has been closed' : null;\r\n            return new IndexQuery(table, db, index, error);\r\n        };\r\n\r\n        this.count = function (table, key) {\r\n            return new Promise((resolve, reject) => {\r\n                if (closed) {\r\n                    reject('Database has been closed');\r\n                    return;\r\n                }\r\n                var transaction = db.transaction(table);\r\n                var store = transaction.objectStore(table);\r\n                try {\r\n                    key = mongoifyKey(key);\r\n                } catch (e) {\r\n                    reject(e);\r\n                }\r\n                var req = key === undefined ? store.count() : store.count(key);\r\n                req.onsuccess = e => resolve(e.target.result);\r\n                transaction.onerror = e => reject(e);\r\n                transaction.onabort = e => reject(e);\r\n            });\r\n        };\r\n\r\n        if (noServerMethods) {\r\n            return;\r\n        }\r\n\r\n        var err;\r\n        [].some.call(db.objectStoreNames, storeName => {\r\n            if (this[storeName]) {\r\n                err = new Error('The store name, \"' + storeName + '\", which you have attempted to load, conflicts with db.js method names.\"');\r\n                this.close();\r\n                return true;\r\n            }\r\n            this[storeName] = {};\r\n            var keys = Object.keys(this);\r\n            keys.filter(key => key !== 'close')\r\n                .map(key =>\r\n                    this[storeName][key] = (...args) => this[key](storeName, ...args)\r\n                );\r\n        });\r\n        return err;\r\n    };\r\n\r\n    var IndexQuery = function (table, db, indexName, preexistingError) {\r\n        var modifyObj = false;\r\n\r\n        var runQuery = function (type, args, cursorType, direction, limitRange, filters, mapper) {\r\n            var transaction = db.transaction(table, modifyObj ? transactionModes.readwrite : transactionModes.readonly);\r\n            var store = transaction.objectStore(table);\r\n            var index = indexName ? store.index(indexName) : store;\r\n            var keyRange = type ? IDBKeyRange[type](...args) : null;\r\n            var results = [];\r\n            var indexArgs = [keyRange];\r\n            var counter = 0;\r\n\r\n            limitRange = limitRange || null;\r\n            filters = filters || [];\r\n            if (cursorType !== 'count') {\r\n                indexArgs.push(direction || 'next');\r\n            }\r\n\r\n            // create a function that will set in the modifyObj properties into\r\n            // the passed record.\r\n            var modifyKeys = modifyObj ? Object.keys(modifyObj) : false;\r\n\r\n            var modifyRecord = function (record) {\r\n                for (var i = 0; i < modifyKeys.length; i++) {\r\n                    var key = modifyKeys[i];\r\n                    var val = modifyObj[key];\r\n                    if (val instanceof Function) { val = val(record); }\r\n                    record[key] = val;\r\n                }\r\n                return record;\r\n            };\r\n\r\n            index[cursorType](...indexArgs).onsuccess = function (e) {\r\n                var cursor = e.target.result;\r\n                if (typeof cursor === 'number') {\r\n                    results = cursor;\r\n                } else if (cursor) {\r\n                    if (limitRange !== null && limitRange[0] > counter) {\r\n                        counter = limitRange[0];\r\n                        cursor.advance(limitRange[0]);\r\n                    } else if (limitRange !== null && counter >= (limitRange[0] + limitRange[1])) {\r\n                        // out of limit range... skip\r\n                    } else {\r\n                        var matchFilter = true;\r\n                        var result = 'value' in cursor ? cursor.value : cursor.key;\r\n\r\n                        filters.forEach(function (filter) {\r\n                            if (!filter || !filter.length) {\r\n                                // Invalid filter do nothing\r\n                            } else if (filter.length === 2) {\r\n                                matchFilter = matchFilter && (result[filter[0]] === filter[1]);\r\n                            } else {\r\n                                matchFilter = matchFilter && filter[0](result);\r\n                            }\r\n                        });\r\n\r\n                        if (matchFilter) {\r\n                            counter++;\r\n                            // if we're doing a modify, run it now\r\n                            if (modifyObj) {\r\n                                result = modifyRecord(result);\r\n                                cursor.update(result);\r\n                            }\r\n                            results.push(mapper(result));\r\n                        }\r\n                        cursor.continue();\r\n                    }\r\n                }\r\n            };\r\n\r\n            return new Promise(function (resolve, reject) {\r\n                transaction.oncomplete = () => resolve(results);\r\n                transaction.onerror = e => reject(e);\r\n                transaction.onabort = e => reject(e);\r\n            });\r\n        };\r\n\r\n        var Query = function (type, args, queuedError) {\r\n            var direction = 'next';\r\n            var cursorType = 'openCursor';\r\n            var filters = [];\r\n            var limitRange = null;\r\n            var mapper = defaultMapper;\r\n            var unique = false;\r\n            var error = preexistingError || queuedError;\r\n\r\n            var execute = function () {\r\n                if (error) {\r\n                    return Promise.reject(error);\r\n                }\r\n                return runQuery(type, args, cursorType, unique ? direction + 'unique' : direction, limitRange, filters, mapper);\r\n            };\r\n\r\n            var limit = function (...args) {\r\n                limitRange = args.slice(0, 2);\r\n                if (limitRange.length === 1) {\r\n                    limitRange.unshift(0);\r\n                }\r\n\r\n                return {\r\n                    execute: execute\r\n                };\r\n            };\r\n            var count = function () {\r\n                direction = null;\r\n                cursorType = 'count';\r\n\r\n                return {\r\n                    execute: execute\r\n                };\r\n            };\r\n\r\n            var filter, desc, distinct, modify, map;\r\n            var keys = function () {\r\n                cursorType = 'openKeyCursor';\r\n\r\n                return {\r\n                    desc,\r\n                    execute,\r\n                    filter,\r\n                    distinct,\r\n                    map\r\n                };\r\n            };\r\n            filter = function (...args) {\r\n                filters.push(args.slice(0, 2));\r\n\r\n                return {\r\n                    keys,\r\n                    execute,\r\n                    filter,\r\n                    desc,\r\n                    distinct,\r\n                    modify,\r\n                    limit,\r\n                    map\r\n                };\r\n            };\r\n            desc = function () {\r\n                direction = 'prev';\r\n\r\n                return {\r\n                    keys,\r\n                    execute,\r\n                    filter,\r\n                    distinct,\r\n                    modify,\r\n                    map\r\n                };\r\n            };\r\n            distinct = function () {\r\n                unique = true;\r\n                return {\r\n                    keys,\r\n                    count,\r\n                    execute,\r\n                    filter,\r\n                    desc,\r\n                    modify,\r\n                    map\r\n                };\r\n            };\r\n            modify = function (update) {\r\n                modifyObj = update;\r\n                return {\r\n                    execute\r\n                };\r\n            };\r\n            map = function (fn) {\r\n                mapper = fn;\r\n\r\n                return {\r\n                    execute,\r\n                    count,\r\n                    keys,\r\n                    filter,\r\n                    desc,\r\n                    distinct,\r\n                    modify,\r\n                    limit,\r\n                    map\r\n                };\r\n            };\r\n\r\n            return {\r\n                execute,\r\n                count,\r\n                keys,\r\n                filter,\r\n                desc,\r\n                distinct,\r\n                modify,\r\n                limit,\r\n                map\r\n            };\r\n        };\r\n\r\n        ['only', 'bound', 'upperBound', 'lowerBound'].forEach((name) => {\r\n            this[name] = function () {\r\n                return Query(name, arguments);\r\n            };\r\n        });\r\n\r\n        this.range = function (opts) {\r\n            var error;\r\n            var keyRange = [null, null];\r\n            try {\r\n                keyRange = mongoDBToKeyRangeArgs(opts);\r\n            } catch (e) {\r\n                error = e;\r\n            }\r\n            return Query(...keyRange, error);\r\n        };\r\n\r\n        this.filter = function (...args) {\r\n            var query = Query(null, null);\r\n            return query.filter(...args);\r\n        };\r\n\r\n        this.all = function () {\r\n            return this.filter();\r\n        };\r\n    };\r\n\r\n    var createSchema = function (e, schema, db) {\r\n        if (typeof schema === 'function') {\r\n            schema = schema();\r\n        }\r\n\r\n        if (!schema || schema.length === 0) {\r\n            return;\r\n        }\r\n\r\n        for (var i = 0; i < db.objectStoreNames.length; i++) {\r\n            var name = db.objectStoreNames[i];\r\n            if (schema.hasOwnProperty(name) === false) {\r\n                e.currentTarget.transaction.db.deleteObjectStore(name);\r\n            }\r\n        }\r\n\r\n        var tableName;\r\n        for (tableName in schema) {\r\n            var table = schema[tableName];\r\n            var store;\r\n            if (!hasOwn.call(schema, tableName) || db.objectStoreNames.contains(tableName)) {\r\n                store = e.currentTarget.transaction.objectStore(tableName);\r\n            } else {\r\n                store = db.createObjectStore(tableName, table.key);\r\n            }\r\n\r\n            var indexKey;\r\n            for (indexKey in table.indexes) {\r\n                var index = table.indexes[indexKey];\r\n                try {\r\n                    store.index(indexKey);\r\n                } catch (err) {\r\n                    store.createIndex(indexKey, index.key || indexKey, Object.keys(index).length ? index : { unique: false });\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    var open = function (e, server, noServerMethods, version, schema) {\r\n        var db = e.target.result;\r\n        dbCache[server] = db;\r\n\r\n        var s = new Server(db, server, noServerMethods);\r\n        return s instanceof Error ? Promise.reject(s) : Promise.resolve(s);\r\n    };\r\n\r\n    var db = {\r\n        version: '0.12.0',\r\n        open: function (options) {\r\n            return new Promise(function (resolve, reject) {\r\n                if (dbCache[options.server]) {\r\n                    open({\r\n                        target: {\r\n                            result: dbCache[options.server]\r\n                        }\r\n                    }, options.server, options.noServerMethods, options.version, options.schema)\r\n                    .then(resolve, reject);\r\n                } else {\r\n                    let request = indexedDB.open(options.server, options.version);\r\n\r\n                    request.onsuccess = e => open(e, options.server, options.noServerMethods, options.version, options.schema).then(resolve, reject);\r\n                    request.onupgradeneeded = e => createSchema(e, options.schema, e.target.result);\r\n                    request.onerror = e => reject(e);\r\n                }\r\n            });\r\n        },\r\n\r\n        delete: function (dbName) {\r\n            return new Promise(function (resolve, reject) {\r\n                var request = indexedDB.deleteDatabase(dbName);\r\n\r\n                request.onsuccess = e => resolve(e);\r\n                request.onerror = e => reject(e);\r\n                request.onblocked = e => reject(e);\r\n            });\r\n        },\r\n\r\n        cmp: function (param1, param2) {\r\n            return indexedDB.cmp(param1, param2);\r\n        }\r\n    };\r\n\r\n    if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\r\n        module.exports = db;\r\n    } else if (typeof define === 'function' && define.amd) {\r\n        define(function () { return db; });\r\n    } else {\r\n        window.db = db;\r\n    }\r\n})(window);\r\n"]}