{"version":3,"sources":["../src/db.js"],"names":[],"mappings":"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","file":"db.js","sourcesContent":["/*global Promise, define, window*/\r\n/*jslint vars:true, continue:true*/\r\nvar module;\r\n(function ( window ) {\r\n    'use strict';\r\n\r\n    var indexedDB,\r\n        IDBKeyRange = window.IDBKeyRange || window.webkitIDBKeyRange,\r\n        transactionModes = {\r\n            readonly: 'readonly',\r\n            readwrite: 'readwrite'\r\n        };\r\n\r\n    var hasOwn = Object.prototype.hasOwnProperty;\r\n\r\n    var getIndexedDB = function() {\r\n      if ( !indexedDB ) {\r\n        indexedDB = window.indexedDB || window.webkitIndexedDB || window.mozIndexedDB || window.oIndexedDB || window.msIndexedDB || ((window.indexedDB === null && window.shimIndexedDB) ? window.shimIndexedDB : undefined);\r\n\r\n        if ( !indexedDB ) {\r\n          throw 'IndexedDB required';\r\n        }\r\n      }\r\n      return indexedDB;\r\n    };\r\n\r\n    var defaultMapper = function (value) {\r\n        return value;\r\n    };\r\n\r\n    var dbCache = {};\r\n\r\n    var Server = function ( db , name ) {\r\n        var that = this,\r\n            closed = false;\r\n\r\n        this.getIndexedDB = function () {\r\n            return db;\r\n        };\r\n\r\n        this.add = function( table ) {\r\n            if ( closed ) {\r\n                throw 'Database has been closed';\r\n            }\r\n\r\n            var records = [];\r\n            var counter = 0;\r\n\r\n            var i, alm;\r\n            var isArray = Array.isArray;\r\n            for (i = 0, alm = arguments.length - 1; i < alm; i++) {\r\n                var aip = arguments[i + 1];\r\n                if (isArray(aip)) {\r\n                    var j, alp, aipl = aip.length;\r\n                    for (j = 0; j < aipl; j++) {\r\n                        records[counter] = aip[j];\r\n                        counter++;\r\n                    }\r\n                } else {\r\n                    records[counter] = aip;\r\n                    counter++;\r\n                }\r\n            }\r\n\r\n            var transaction = db.transaction( table , transactionModes.readwrite ),\r\n                store = transaction.objectStore( table );\r\n\r\n            return new Promise(function(resolve, reject){\r\n              records.forEach( function ( record ) {\r\n                  var req;\r\n                  if ( record.item && record.key ) {\r\n                      var key = record.key;\r\n                      record = record.item;\r\n                      req = store.add( record , key );\r\n                  } else {\r\n                      req = store.add( record );\r\n                  }\r\n\r\n                  req.onsuccess = function ( e ) {\r\n                      var target = e.target;\r\n                      var keyPath = target.source.keyPath;\r\n                      if ( keyPath === null ) {\r\n                          keyPath = '__id__';\r\n                      }\r\n                      Object.defineProperty( record , keyPath , {\r\n                          value: target.result,\r\n                          enumerable: true\r\n                      });\r\n                  };\r\n              } );\r\n\r\n              transaction.oncomplete = function () {\r\n                  resolve( records , that );\r\n              };\r\n              transaction.onerror = function ( e ) {\r\n                  // prevent Firefox from throwing a ConstraintError and aborting (hard)\r\n                  // https://bugzilla.mozilla.org/show_bug.cgi?id=872873\r\n                  e.preventDefault();\r\n                  reject( e );\r\n              };\r\n              transaction.onabort = function ( e ) {\r\n                  reject( e );\r\n              };\r\n\r\n            });\r\n        };\r\n\r\n        this.update = function( table ) {\r\n            if ( closed ) {\r\n                throw 'Database has been closed';\r\n            }\r\n\r\n            var records = [];\r\n            var i;\r\n            for ( i = 0 ; i < arguments.length - 1 ; i++ ) {\r\n                records[ i ] = arguments[ i + 1 ];\r\n            }\r\n\r\n            var transaction = db.transaction( table , transactionModes.readwrite ),\r\n                store = transaction.objectStore( table ),\r\n                keyPath = store.keyPath;\r\n\r\n            return new Promise(function(resolve, reject){\r\n              records.forEach( function ( record ) {\r\n                  var req;\r\n                  var count;\r\n                  if ( record.item && record.key ) {\r\n                      var key = record.key;\r\n                      record = record.item;\r\n                      req = store.put( record , key );\r\n                  } else {\r\n                      req = store.put( record );\r\n                  }\r\n\r\n                  req.onsuccess = function ( e ) {\r\n                      // deferred.notify(); es6 promise can't notify\r\n                  };\r\n              } );\r\n\r\n              transaction.oncomplete = function () {\r\n                  resolve( records , that );\r\n              };\r\n              transaction.onerror = function ( e ) {\r\n                  reject( e );\r\n              };\r\n              transaction.onabort = function ( e ) {\r\n                  reject( e );\r\n              };\r\n            });\r\n\r\n        };\r\n\r\n        this.remove = function ( table , key ) {\r\n            if ( closed ) {\r\n                throw 'Database has been closed';\r\n            }\r\n            var transaction = db.transaction( table , transactionModes.readwrite ),\r\n                store = transaction.objectStore( table );\r\n\r\n            return new Promise(function(resolve, reject){\r\n              var req = store['delete']( key );\r\n              transaction.oncomplete = function ( ) {\r\n                  resolve( key );\r\n              };\r\n              transaction.onerror = function ( e ) {\r\n                  reject( e );\r\n              };\r\n            });\r\n        };\r\n\r\n        this.clear = function ( table ) {\r\n            if ( closed ) {\r\n                throw 'Database has been closed';\r\n            }\r\n            var transaction = db.transaction( table , transactionModes.readwrite ),\r\n                store = transaction.objectStore( table );\r\n\r\n            var req = store.clear();\r\n            return new Promise(function(resolve, reject){\r\n              transaction.oncomplete = function ( ) {\r\n                  resolve( );\r\n              };\r\n              transaction.onerror = function ( e ) {\r\n                  reject( e );\r\n              };\r\n            });\r\n        };\r\n\r\n        this.close = function ( ) {\r\n            if ( closed ) {\r\n                throw 'Database has been closed';\r\n            }\r\n            db.close();\r\n            closed = true;\r\n            delete dbCache[ name ];\r\n        };\r\n\r\n        this.get = function ( table , id ) {\r\n            if ( closed ) {\r\n                throw 'Database has been closed';\r\n            }\r\n            var transaction = db.transaction( table ),\r\n                store = transaction.objectStore( table );\r\n\r\n            var req = store.get( id );\r\n            return new Promise(function(resolve, reject){\r\n              req.onsuccess = function ( e ) {\r\n                  resolve( e.target.result );\r\n              };\r\n              transaction.onerror = function ( e ) {\r\n                  reject( e );\r\n              };\r\n            });\r\n        };\r\n\r\n        this.query = function ( table , index ) {\r\n            if ( closed ) {\r\n                throw 'Database has been closed';\r\n            }\r\n            return new IndexQuery( table , db , index );\r\n        };\r\n\r\n        this.count = function (table , key) {\r\n            if ( closed ) {\r\n                throw 'Database has been closed';\r\n            }\r\n            var transaction = db.transaction( table ),\r\n                store = transaction.objectStore( table );\r\n        };\r\n\r\n        var i, il;\r\n        for ( i = 0 , il = db.objectStoreNames.length ; i < il ; i++ ) {\r\n            (function ( storeName ) {\r\n                that[ storeName ] = { };\r\n                var i;\r\n                for ( i in that ) {\r\n                    if ( !hasOwn.call( that , i ) || i === 'close' ) {\r\n                        continue;\r\n                    }\r\n                    that[ storeName ][ i ] = (function ( i ) {\r\n                        return function () {\r\n                            var args = [ storeName ].concat( [].slice.call( arguments , 0 ) );\r\n                            return that[ i ].apply( that , args );\r\n                        };\r\n                    }( i ));\r\n                }\r\n            }( db.objectStoreNames[ i ] ));\r\n        }\r\n    };\r\n\r\n    var IndexQuery = function ( table , db , indexName ) {\r\n        var that = this;\r\n        var modifyObj = false;\r\n\r\n        var runQuery = function ( type, args , cursorType , direction, limitRange, filters , mapper ) {\r\n            var transaction = db.transaction( table, modifyObj ? transactionModes.readwrite : transactionModes.readonly ),\r\n                store = transaction.objectStore( table ),\r\n                index = indexName ? store.index( indexName ) : store,\r\n                keyRange = type ? IDBKeyRange[ type ].apply( null, args ) : null,\r\n                results = [],\r\n                indexArgs = [ keyRange ],\r\n                counter = 0;\r\n\r\n            limitRange = limitRange || null;\r\n            filters = filters || [];\r\n            if ( cursorType !== 'count' ) {\r\n                indexArgs.push( direction || 'next' );\r\n            }\r\n\r\n            // create a function that will set in the modifyObj properties into\r\n            // the passed record.\r\n            var modifyKeys = modifyObj ? Object.keys(modifyObj) : false;\r\n            var modifyRecord = function(record) {\r\n                var i;\r\n                for(i = 0; i < modifyKeys.length; i++) {\r\n                    var key = modifyKeys[i];\r\n                    var val = modifyObj[key];\r\n                    if(val instanceof Function) {val = val(record);}\r\n                    record[key] = val;\r\n                }\r\n                return record;\r\n            };\r\n\r\n            index[cursorType].apply( index , indexArgs ).onsuccess = function ( e ) {\r\n                var cursor = e.target.result;\r\n                if ( typeof cursor === 'number' ) {\r\n                    results = cursor;\r\n                } else if ( cursor ) {\r\n                    if ( limitRange !== null && limitRange[0] > counter) {\r\n                        counter = limitRange[0];\r\n                        cursor.advance(limitRange[0]);\r\n                    } else if ( limitRange !== null && counter >= (limitRange[0] + limitRange[1]) ) {\r\n                        //out of limit range... skip\r\n                    } else {\r\n                        var matchFilter = true;\r\n                        var result = 'value' in cursor ? cursor.value : cursor.key;\r\n\r\n                        filters.forEach( function ( filter ) {\r\n                            if ( !filter || !filter.length ) {\r\n                                //Invalid filter do nothing\r\n                            } else if ( filter.length === 2 ) {\r\n                                matchFilter = matchFilter && (result[filter[0]] === filter[1]);\r\n                            } else {\r\n                                matchFilter = matchFilter && filter[0].apply(undefined,[result]);\r\n                            }\r\n                        });\r\n\r\n                        if (matchFilter) {\r\n                            counter++;\r\n                            results.push( mapper(result) );\r\n                            // if we're doing a modify, run it now\r\n                            if(modifyObj) {\r\n                                result = modifyRecord(result);\r\n                                cursor.update(result);\r\n                            }\r\n                        }\r\n                        cursor['continue']();\r\n                    }\r\n                }\r\n            };\r\n\r\n            return new Promise(function(resolve, reject){\r\n              transaction.oncomplete = function () {\r\n                  resolve( results );\r\n              };\r\n              transaction.onerror = function ( e ) {\r\n                  reject( e );\r\n              };\r\n              transaction.onabort = function ( e ) {\r\n                  reject( e );\r\n              };\r\n            });\r\n        };\r\n\r\n        var Query = function ( type , args ) {\r\n            var direction = 'next',\r\n                cursorType = 'openCursor',\r\n                filters = [],\r\n                limitRange = null,\r\n                mapper = defaultMapper,\r\n                unique = false;\r\n\r\n            var execute = function () {\r\n                return runQuery( type , args , cursorType , unique ? direction + 'unique' : direction, limitRange, filters , mapper );\r\n            };\r\n\r\n            var limit = function () {\r\n                limitRange = Array.prototype.slice.call( arguments , 0 , 2 );\r\n                if (limitRange.length === 1) {\r\n                    limitRange.unshift(0);\r\n                }\r\n\r\n                return {\r\n                    execute: execute\r\n                };\r\n            };\r\n            var count = function () {\r\n                direction = null;\r\n                cursorType = 'count';\r\n\r\n                return {\r\n                    execute: execute\r\n                };\r\n            };\r\n            \r\n            var filter, desc, distinct, modify, map;\r\n            var keys = function () {\r\n                cursorType = 'openKeyCursor';\r\n\r\n                return {\r\n                    desc: desc,\r\n                    execute: execute,\r\n                    filter: filter,\r\n                    distinct: distinct,\r\n                    map: map\r\n                };\r\n            };\r\n            filter = function ( ) {\r\n                filters.push( Array.prototype.slice.call( arguments , 0 , 2 ) );\r\n\r\n                return {\r\n                    keys: keys,\r\n                    execute: execute,\r\n                    filter: filter,\r\n                    desc: desc,\r\n                    distinct: distinct,\r\n                    modify: modify,\r\n                    limit: limit,\r\n                    map: map\r\n                };\r\n            };\r\n            desc = function () {\r\n                direction = 'prev';\r\n\r\n                return {\r\n                    keys: keys,\r\n                    execute: execute,\r\n                    filter: filter,\r\n                    distinct: distinct,\r\n                    modify: modify,\r\n                    map: map\r\n                };\r\n            };\r\n            distinct = function () {\r\n                unique = true;\r\n                return {\r\n                    keys: keys,\r\n                    count: count,\r\n                    execute: execute,\r\n                    filter: filter,\r\n                    desc: desc,\r\n                    modify: modify,\r\n                    map: map\r\n                };\r\n            };\r\n            modify = function(update) {\r\n                modifyObj = update;\r\n                return {\r\n                    execute: execute\r\n                };\r\n            };\r\n            map = function (fn) {\r\n                mapper = fn;\r\n\r\n                return {\r\n                    execute: execute,\r\n                    count: count,\r\n                    keys: keys,\r\n                    filter: filter,\r\n                    desc: desc,\r\n                    distinct: distinct,\r\n                    modify: modify,\r\n                    limit: limit,\r\n                    map: map\r\n                };\r\n            };\r\n\r\n            return {\r\n                execute: execute,\r\n                count: count,\r\n                keys: keys,\r\n                filter: filter,\r\n                desc: desc,\r\n                distinct: distinct,\r\n                modify: modify,\r\n                limit: limit,\r\n                map: map\r\n            };\r\n        };\r\n\r\n        ['only', 'bound', 'upperBound', 'lowerBound'].forEach(function (name) {\r\n            that[name] = function () {\r\n                return new Query( name , arguments );\r\n            };\r\n        });\r\n\r\n        this.filter = function () {\r\n            var query = new Query( null , null );\r\n            return query.filter.apply( query , arguments );\r\n        };\r\n\r\n        this.all = function () {\r\n            return this.filter();\r\n        };\r\n    };\r\n\r\n    var createSchema = function ( e , schema , db ) {\r\n        if ( typeof schema === 'function' ) {\r\n            schema = schema();\r\n        }\r\n\r\n        var tableName;\r\n        for ( tableName in schema ) {\r\n            var table = schema[ tableName ];\r\n            var store;\r\n            if (!hasOwn.call(schema, tableName) || db.objectStoreNames.contains(tableName)) {\r\n                store = e.currentTarget.transaction.objectStore(tableName);\r\n            } else {\r\n                store = db.createObjectStore(tableName, table.key);\r\n            }\r\n\r\n            var indexKey;\r\n            for ( indexKey in table.indexes ) {\r\n                var index = table.indexes[ indexKey ];\r\n                try {\r\n                    store.index(indexKey);\r\n                } catch (err) {\r\n                    store.createIndex( indexKey , index.key || indexKey , Object.keys(index).length ? index : { unique: false } );\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    var open = function ( e , server , version , schema ) {\r\n        var db = e.target.result;\r\n        var s = new Server( db , server );\r\n        var upgrade;\r\n\r\n        dbCache[ server ] = db;\r\n\r\n        return Promise.resolve(s);\r\n    };\r\n\r\n    var db = {\r\n        version: '0.10.2',\r\n        open: function ( options ) {\r\n            var request;\r\n\r\n            return new Promise(function(resolve, reject){\r\n              if ( dbCache[ options.server ] ) {\r\n                  open( {\r\n                      target: {\r\n                          result: dbCache[ options.server ]\r\n                      }\r\n                  } , options.server , options.version , options.schema )\r\n                  .then(resolve, reject);\r\n              } else {\r\n                  request = getIndexedDB().open( options.server , options.version );\r\n\r\n                  request.onsuccess = function ( e ) {\r\n                      open( e , options.server , options.version , options.schema )\r\n                          .then(resolve, reject);\r\n                  };\r\n\r\n                  request.onupgradeneeded = function ( e ) {\r\n                      createSchema( e , options.schema , e.target.result );\r\n                  };\r\n                  request.onerror = function ( e ) {\r\n                      reject( e );\r\n                  };\r\n              }\r\n            });\r\n        },\r\n        'delete': function (dbName) {\r\n            var request;\r\n\r\n            return new Promise(function(resolve, reject){\r\n                request = indexedDB.deleteDatabase( dbName );\r\n\r\n                request.onsuccess = function () {\r\n                    resolve();\r\n                };\r\n                request.onerror = function ( e ) {\r\n                    reject( e );\r\n                };\r\n                request.onblocked = function ( e ) {\r\n                    reject( e );\r\n                };\r\n            });\r\n        }\r\n    };\r\n\r\n    if (module !== undefined && module.exports !== undefined) {\r\n        module.exports = db;\r\n    } else if ( typeof define === 'function' && define.amd ) {\r\n        define( function() { return db; } );\r\n    } else {\r\n        window.db = db;\r\n    }\r\n}( window ));\r\n"]}