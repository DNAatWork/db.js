{"version":3,"sources":["../src/db.js"],"names":["local","mongoDBToKeyRangeArgs","opts","keys","Object","sort","length","key","val","name","inclusive","TypeError","x","y","pattern","mongoifyKey","_typeof","IDBKeyRange","type","_mongoDBToKeyRangeArg2","apply","_toConsumableArray","args","webkitIDBKeyRange","transactionModes","readonly","readwrite","hasOwn","prototype","hasOwnProperty","indexedDB","webkitIndexedDB","mozIndexedDB","oIndexedDB","msIndexedDB","shimIndexedDB","Error","dbCache","db","closed","_key","arguments","reject","records","reduce","aip","concat","transaction","table","oncomplete","resolve","_this","e","preventDefault","onabort","store","objectStore","forEach","record","req","item","add","onsuccess","target","keyPath","source","defineProperty","value","result","enumerable","_key2","_this2","onerror","put","this","remove","Promise","clear","close","version","get","query","index","error","IndexQuery","count","undefined","addEventListener","eventName","handler","serverEvents","includes","removeEventListener","evName","noServerMethods","err","some","call","objectStoreNames","storeName","_this3","runQuery","cursorType","direction","limitRange","filters","mapper","keyRange","results","indexArgs","modifyObj","push","modifyRecord","modifyKeys","cursor","counter","advance","matchFilter","filter","update","Query","queuedError","defaultMapper","unique","execute","_key4","slice","unshift","desc","distinct","map","_key5","modify","limit","fn","_this4","range","all","createSchema","schema","i","currentTarget","deleteObjectStore","tableName","contains","createObjectStore","indexKey","indexes","createIndex","_open","server","s","Server","open","options","then","_ret2","v","request","onblocked","ev","res","rej","resume","delete","dbName","newVersion","oldVersion","cmp","param1","param2","module","exports","define","amd"],"mappings":"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","file":"db.min.js","sourcesContent":["(function (local) {\r\n    'use strict';\r\n\r\n    const IDBKeyRange = local.IDBKeyRange || local.webkitIDBKeyRange;\r\n    const transactionModes = {\r\n        readonly: 'readonly',\r\n        readwrite: 'readwrite'\r\n    };\r\n    const hasOwn = Object.prototype.hasOwnProperty;\r\n    const defaultMapper = x => x;\r\n\r\n    const indexedDB = local.indexedDB || local.webkitIndexedDB ||\r\n        local.mozIndexedDB || local.oIndexedDB || local.msIndexedDB ||\r\n        local.shimIndexedDB || (function () {\r\n            throw new Error('IndexedDB required');\r\n        }());\r\n\r\n    const dbCache = {};\r\n    const serverEvents = ['abort', 'error', 'versionchange'];\r\n\r\n    function mongoDBToKeyRangeArgs (opts) {\r\n        const keys = Object.keys(opts).sort();\r\n        if (keys.length === 1) {\r\n            const key = keys[0];\r\n            const val = opts[key];\r\n            let name, inclusive;\r\n            switch (key) {\r\n            case 'eq': name = 'only'; break;\r\n            case 'gt':\r\n                name = 'lowerBound';\r\n                inclusive = true;\r\n                break;\r\n            case 'lt':\r\n                name = 'upperBound';\r\n                inclusive = true;\r\n                break;\r\n            case 'gte': name = 'lowerBound'; break;\r\n            case 'lte': name = 'upperBound'; break;\r\n            default: throw new TypeError('`' + key + '` is not valid key');\r\n            }\r\n            return [name, [val, inclusive]];\r\n        }\r\n        const x = opts[keys[0]];\r\n        const y = opts[keys[1]];\r\n        const pattern = keys.join('-');\r\n\r\n        switch (pattern) {\r\n        case 'gt-lt': case 'gt-lte': case 'gte-lt': case 'gte-lte':\r\n            return ['bound', [x, y, keys[0] === 'gt', keys[1] === 'lt']];\r\n        default: throw new TypeError(\r\n          '`' + pattern + '` are conflicted keys'\r\n        );\r\n        }\r\n    }\r\n    function mongoifyKey (key) {\r\n        if (key && typeof key === 'object' && !(key instanceof IDBKeyRange)) {\r\n            let [type, args] = mongoDBToKeyRangeArgs(key);\r\n            return IDBKeyRange[type](...args);\r\n        }\r\n        return key;\r\n    }\r\n\r\n    const Server = function (db, name, noServerMethods, version) {\r\n        let closed = false;\r\n\r\n        this.getIndexedDB = () => db;\r\n        this.isClosed = () => closed;\r\n\r\n        this.add = function (table, ...args) {\r\n            return new Promise(function (resolve, reject) {\r\n                if (closed) {\r\n                    reject('Database has been closed');\r\n                    return;\r\n                }\r\n\r\n                const records = args.reduce(function (records, aip) {\r\n                    return records.concat(aip);\r\n                }, []);\r\n\r\n                const transaction = db.transaction(table, transactionModes.readwrite);\r\n                transaction.oncomplete = () => resolve(records, this);\r\n                transaction.onerror = e => {\r\n                    // prevent Firefox from throwing a ConstraintError and aborting (hard)\r\n                    // https://bugzilla.mozilla.org/show_bug.cgi?id=872873\r\n                    e.preventDefault();\r\n                    reject(e);\r\n                };\r\n                transaction.onabort = e => reject(e);\r\n\r\n                const store = transaction.objectStore(table);\r\n                records.forEach(function (record) {\r\n                    let req;\r\n                    if (record.item && record.key) {\r\n                        const key = record.key;\r\n                        record = record.item;\r\n                        req = store.add(record, key);\r\n                    } else {\r\n                        req = store.add(record);\r\n                    }\r\n\r\n                    req.onsuccess = function (e) {\r\n                        const target = e.target;\r\n                        let keyPath = target.source.keyPath;\r\n                        if (keyPath === null) {\r\n                            keyPath = '__id__';\r\n                        }\r\n                        Object.defineProperty(record, keyPath, {\r\n                            value: target.result,\r\n                            enumerable: true\r\n                        });\r\n                    };\r\n                });\r\n            });\r\n        };\r\n\r\n        this.update = function (table, ...args) {\r\n            return new Promise(function (resolve, reject) {\r\n                if (closed) {\r\n                    reject('Database has been closed');\r\n                    return;\r\n                }\r\n\r\n                const transaction = db.transaction(table, transactionModes.readwrite);\r\n                transaction.oncomplete = () => resolve(records, this);\r\n                transaction.onerror = e => reject(e);\r\n                transaction.onabort = e => reject(e);\r\n\r\n                const store = transaction.objectStore(table);\r\n                const records = args.reduce(function (records, aip) {\r\n                    return records.concat(aip);\r\n                }, []);\r\n                records.forEach(function (record) {\r\n                    if (record.item && record.key) {\r\n                        const key = record.key;\r\n                        record = record.item;\r\n                        store.put(record, key);\r\n                    } else {\r\n                        store.put(record);\r\n                    }\r\n                });\r\n            });\r\n        };\r\n\r\n        this.remove = function (table, key) {\r\n            return new Promise(function (resolve, reject) {\r\n                if (closed) {\r\n                    reject('Database has been closed');\r\n                    return;\r\n                }\r\n                const transaction = db.transaction(table, transactionModes.readwrite);\r\n                transaction.oncomplete = () => resolve(key);\r\n                transaction.onerror = e => reject(e);\r\n                transaction.onabort = e => reject(e);\r\n\r\n                const store = transaction.objectStore(table);\r\n                store.delete(key);\r\n            });\r\n        };\r\n\r\n        this.clear = function (table) {\r\n            return new Promise(function (resolve, reject) {\r\n                if (closed) {\r\n                    reject('Database has been closed');\r\n                    return;\r\n                }\r\n                const transaction = db.transaction(table, transactionModes.readwrite);\r\n                transaction.oncomplete = () => resolve();\r\n                transaction.onerror = e => reject(e);\r\n                transaction.onabort = e => reject(e);\r\n\r\n                const store = transaction.objectStore(table);\r\n                store.clear();\r\n            });\r\n        };\r\n\r\n        this.close = function () {\r\n            return new Promise(function (resolve, reject) {\r\n                if (closed) {\r\n                    reject('Database has been closed');\r\n                }\r\n                db.close();\r\n                closed = true;\r\n                delete dbCache[name][version];\r\n                resolve();\r\n            });\r\n        };\r\n\r\n        this.get = function (table, key) {\r\n            return new Promise(function (resolve, reject) {\r\n                if (closed) {\r\n                    reject('Database has been closed');\r\n                    return;\r\n                }\r\n                const transaction = db.transaction(table);\r\n                transaction.onerror = e => reject(e);\r\n                transaction.onabort = e => reject(e);\r\n\r\n                const store = transaction.objectStore(table);\r\n\r\n                try {\r\n                    key = mongoifyKey(key);\r\n                } catch (e) {\r\n                    reject(e);\r\n                }\r\n                const req = store.get(key);\r\n                req.onsuccess = e => resolve(e.target.result);\r\n            });\r\n        };\r\n\r\n        this.query = function (table, index) {\r\n            const error = closed ? 'Database has been closed' : null;\r\n            return new IndexQuery(table, db, index, error);\r\n        };\r\n\r\n        this.count = function (table, key) {\r\n            return new Promise((resolve, reject) => {\r\n                if (closed) {\r\n                    reject('Database has been closed');\r\n                    return;\r\n                }\r\n                const transaction = db.transaction(table);\r\n                transaction.onerror = e => reject(e);\r\n                transaction.onabort = e => reject(e);\r\n\r\n                const store = transaction.objectStore(table);\r\n                try {\r\n                    key = mongoifyKey(key);\r\n                } catch (e) {\r\n                    reject(e);\r\n                }\r\n                const req = key === undefined ? store.count() : store.count(key);\r\n                req.onsuccess = e => resolve(e.target.result);\r\n            });\r\n        };\r\n\r\n        this.addEventListener = function (eventName, handler) {\r\n            if (!serverEvents.includes(eventName)) {\r\n                throw new Error('Unrecognized event type ' + eventName);\r\n            }\r\n            db.addEventListener(eventName, handler);\r\n        };\r\n\r\n        this.removeEventListener = function (eventName, handler) {\r\n            if (!serverEvents.includes(eventName)) {\r\n                throw new Error('Unrecognized event type ' + eventName);\r\n            }\r\n            db.removeEventListener(eventName, handler);\r\n        };\r\n\r\n        serverEvents.forEach(function (evName) {\r\n            this[evName] = function (handler) {\r\n                this.addEventListener(evName, handler);\r\n                return this;\r\n            };\r\n        }, this);\r\n\r\n        if (noServerMethods) {\r\n            return;\r\n        }\r\n\r\n        let err;\r\n        [].some.call(db.objectStoreNames, storeName => {\r\n            if (this[storeName]) {\r\n                err = new Error('The store name, \"' + storeName + '\", which you have attempted to load, conflicts with db.js method names.\"');\r\n                this.close();\r\n                return true;\r\n            }\r\n            this[storeName] = {};\r\n            const keys = Object.keys(this);\r\n            keys.filter(key => !(([...serverEvents, 'close', 'addEventListener', 'removeEventListener']).includes(key)))\r\n                .map(key =>\r\n                    this[storeName][key] = (...args) => this[key](storeName, ...args)\r\n                );\r\n        });\r\n        return err;\r\n    };\r\n\r\n    const IndexQuery = function (table, db, indexName, preexistingError) {\r\n        let modifyObj = false;\r\n\r\n        const runQuery = function (type, args, cursorType, direction, limitRange, filters, mapper) {\r\n            return new Promise(function (resolve, reject) {\r\n                let keyRange;\r\n                try {\r\n                    keyRange = type ? IDBKeyRange[type](...args) : null;\r\n                } catch (e) {\r\n                    reject(e);\r\n                }\r\n                let results = [];\r\n                const indexArgs = [keyRange];\r\n                let counter = 0;\r\n\r\n                const transaction = db.transaction(table, modifyObj ? transactionModes.readwrite : transactionModes.readonly);\r\n                transaction.oncomplete = () => resolve(results);\r\n                transaction.onerror = e => reject(e);\r\n                transaction.onabort = e => reject(e);\r\n\r\n                const store = transaction.objectStore(table);\r\n                const index = indexName ? store.index(indexName) : store;\r\n\r\n                limitRange = limitRange || null;\r\n                filters = filters || [];\r\n                if (cursorType !== 'count') {\r\n                    indexArgs.push(direction || 'next');\r\n                }\r\n\r\n                // create a function that will set in the modifyObj properties into\r\n                // the passed record.\r\n                const modifyKeys = modifyObj ? Object.keys(modifyObj) : [];\r\n\r\n                const modifyRecord = function (record) {\r\n                    modifyKeys.forEach(key => {\r\n                        let val = modifyObj[key];\r\n                        if (typeof val === 'function') { val = val(record); }\r\n                        record[key] = val;\r\n                    });\r\n                    return record;\r\n                };\r\n\r\n                index[cursorType](...indexArgs).onsuccess = function (e) {\r\n                    const cursor = e.target.result;\r\n                    if (typeof cursor === 'number') {\r\n                        results = cursor;\r\n                    } else if (cursor) {\r\n                        if (limitRange !== null && limitRange[0] > counter) {\r\n                            counter = limitRange[0];\r\n                            cursor.advance(limitRange[0]);\r\n                        } else if (limitRange !== null && counter >= (limitRange[0] + limitRange[1])) {\r\n                            // out of limit range... skip\r\n                        } else {\r\n                            let matchFilter = true;\r\n                            let result = 'value' in cursor ? cursor.value : cursor.key;\r\n\r\n                            filters.forEach(function (filter) {\r\n                                if (!filter || !filter.length) {\r\n                                    // Invalid filter do nothing\r\n                                } else if (filter.length === 2) {\r\n                                    matchFilter = matchFilter && (result[filter[0]] === filter[1]);\r\n                                } else {\r\n                                    matchFilter = matchFilter && filter[0](result);\r\n                                }\r\n                            });\r\n\r\n                            if (matchFilter) {\r\n                                counter++;\r\n                                // if we're doing a modify, run it now\r\n                                if (modifyObj) {\r\n                                    result = modifyRecord(result);\r\n                                    cursor.update(result);\r\n                                }\r\n                                results.push(mapper(result));\r\n                            }\r\n                            cursor.continue();\r\n                        }\r\n                    }\r\n                };\r\n            });\r\n        };\r\n\r\n        const Query = function (type, args, queuedError) {\r\n            let direction = 'next';\r\n            let cursorType = 'openCursor';\r\n            const filters = [];\r\n            let limitRange = null;\r\n            let mapper = defaultMapper;\r\n            let unique = false;\r\n            const error = preexistingError || queuedError;\r\n\r\n            const execute = function () {\r\n                if (error) {\r\n                    return Promise.reject(error);\r\n                }\r\n                return runQuery(type, args, cursorType, unique ? direction + 'unique' : direction, limitRange, filters, mapper);\r\n            };\r\n\r\n            const limit = function (...args) {\r\n                limitRange = args.slice(0, 2);\r\n                if (limitRange.length === 1) {\r\n                    limitRange.unshift(0);\r\n                }\r\n\r\n                return {\r\n                    execute\r\n                };\r\n            };\r\n            const count = function () {\r\n                direction = null;\r\n                cursorType = 'count';\r\n\r\n                return {\r\n                    execute\r\n                };\r\n            };\r\n\r\n            const keys = function () {\r\n                cursorType = 'openKeyCursor';\r\n\r\n                return {\r\n                    desc,\r\n                    execute,\r\n                    filter,\r\n                    distinct,\r\n                    map\r\n                };\r\n            };\r\n            const filter = function (...args) {\r\n                filters.push(args.slice(0, 2));\r\n\r\n                return {\r\n                    keys,\r\n                    execute,\r\n                    filter,\r\n                    desc,\r\n                    distinct,\r\n                    modify,\r\n                    limit,\r\n                    map\r\n                };\r\n            };\r\n            const desc = function () {\r\n                direction = 'prev';\r\n\r\n                return {\r\n                    keys,\r\n                    execute,\r\n                    filter,\r\n                    distinct,\r\n                    modify,\r\n                    map\r\n                };\r\n            };\r\n            const distinct = function () {\r\n                unique = true;\r\n                return {\r\n                    keys,\r\n                    count,\r\n                    execute,\r\n                    filter,\r\n                    desc,\r\n                    modify,\r\n                    map\r\n                };\r\n            };\r\n            const modify = function (update) {\r\n                modifyObj = update;\r\n                return {\r\n                    execute\r\n                };\r\n            };\r\n            const map = function (fn) {\r\n                mapper = fn;\r\n\r\n                return {\r\n                    execute,\r\n                    count,\r\n                    keys,\r\n                    filter,\r\n                    desc,\r\n                    distinct,\r\n                    modify,\r\n                    limit,\r\n                    map\r\n                };\r\n            };\r\n\r\n            return {\r\n                execute,\r\n                count,\r\n                keys,\r\n                filter,\r\n                desc,\r\n                distinct,\r\n                modify,\r\n                limit,\r\n                map\r\n            };\r\n        };\r\n\r\n        ['only', 'bound', 'upperBound', 'lowerBound'].forEach((name) => {\r\n            this[name] = function () {\r\n                return Query(name, arguments);\r\n            };\r\n        });\r\n\r\n        this.range = function (opts) {\r\n            let error;\r\n            let keyRange = [null, null];\r\n            try {\r\n                keyRange = mongoDBToKeyRangeArgs(opts);\r\n            } catch (e) {\r\n                error = e;\r\n            }\r\n            return Query(...keyRange, error);\r\n        };\r\n\r\n        this.filter = function (...args) {\r\n            const query = Query(null, null);\r\n            return query.filter(...args);\r\n        };\r\n\r\n        this.all = function () {\r\n            return this.filter();\r\n        };\r\n    };\r\n\r\n    const createSchema = function (e, schema, db) {\r\n        if (!schema || schema.length === 0) {\r\n            return;\r\n        }\r\n\r\n        for (let i = 0; i < db.objectStoreNames.length; i++) {\r\n            const name = db.objectStoreNames[i];\r\n            if (!schema.hasOwnProperty(name)) {\r\n                e.currentTarget.transaction.db.deleteObjectStore(name);\r\n            }\r\n        }\r\n\r\n        for (let tableName in schema) {\r\n            const table = schema[tableName];\r\n            let store;\r\n            if (!hasOwn.call(schema, tableName) || db.objectStoreNames.contains(tableName)) {\r\n                store = e.currentTarget.transaction.objectStore(tableName);\r\n            } else {\r\n                store = db.createObjectStore(tableName, table.key);\r\n            }\r\n\r\n            for (let indexKey in table.indexes) {\r\n                const index = table.indexes[indexKey];\r\n                try {\r\n                    store.index(indexKey);\r\n                } catch (err) {\r\n                    store.createIndex(indexKey, index.key || indexKey, Object.keys(index).length ? index : { unique: false });\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    const open = function (e, server, noServerMethods, version) {\r\n        const db = e.target.result;\r\n        dbCache[server][version] = db;\r\n\r\n        const s = new Server(db, server, noServerMethods, version);\r\n        return s instanceof Error ? Promise.reject(s) : Promise.resolve(s);\r\n    };\r\n\r\n    const db = {\r\n        version: '0.14.0',\r\n        open: function (options) {\r\n            let server = options.server;\r\n            let version = options.version || 1;\r\n            let schema = options.schema;\r\n            let noServerMethods = options.noServerMethods;\r\n\r\n            if (!dbCache[server]) {\r\n                dbCache[server] = {};\r\n            }\r\n            return new Promise(function (resolve, reject) {\r\n                if (dbCache[server][version]) {\r\n                    open({\r\n                        target: {\r\n                            result: dbCache[server][version]\r\n                        }\r\n                    }, server, noServerMethods, version)\r\n                    .then(resolve, reject);\r\n                } else {\r\n                    if (typeof schema === 'function') {\r\n                        try {\r\n                            schema = schema();\r\n                        } catch (e) {\r\n                            reject(e);\r\n                            return;\r\n                        }\r\n                    }\r\n                    let request = indexedDB.open(server, version);\r\n\r\n                    request.onsuccess = e => open(e, server, noServerMethods, version).then(resolve, reject);\r\n                    request.onupgradeneeded = e => createSchema(e, schema, e.target.result);\r\n                    request.onerror = e => reject(e);\r\n                    request.onblocked = e => {\r\n                        const resume = new Promise(function (res, rej) {\r\n                            // We overwrite handlers rather than make a new\r\n                            //   open() since the original request is still\r\n                            //   open and its onsuccess will still fire if\r\n                            //   the user unblocks by closing the blocking\r\n                            //   connection\r\n                            request.onsuccess = (ev) => {\r\n                                open(ev, server, noServerMethods, version)\r\n                                    .then(res, rej);\r\n                            };\r\n                            request.onerror = e => rej(e);\r\n                        });\r\n                        e.resume = resume;\r\n                        reject(e);\r\n                    };\r\n                }\r\n            });\r\n        },\r\n\r\n        delete: function (dbName) {\r\n            return new Promise(function (resolve, reject) {\r\n                const request = indexedDB.deleteDatabase(dbName); // Does not throw\r\n\r\n                request.onsuccess = e => resolve(e);\r\n                request.onerror = e => reject(e); // No errors currently\r\n                request.onblocked = e => {\r\n                    const resume = new Promise(function (res, rej) {\r\n                        // We overwrite handlers rather than make a new\r\n                        //   delete() since the original request is still\r\n                        //   open and its onsuccess will still fire if\r\n                        //   the user unblocks by closing the blocking\r\n                        //   connection\r\n                        request.onsuccess = ev => {\r\n                            // Attempt to workaround Firefox event version problem: https://bugzilla.mozilla.org/show_bug.cgi?id=1220279\r\n                            if (!('newVersion' in ev)) {\r\n                                ev.newVersion = e.newVersion;\r\n                            }\r\n\r\n                            if (!('oldVersion' in ev)) {\r\n                                ev.oldVersion = e.oldVersion;\r\n                            }\r\n\r\n                            res(ev);\r\n                        };\r\n                        request.onerror = e => rej(e);\r\n                    });\r\n                    e.resume = resume;\r\n                    reject(e);\r\n                };\r\n            });\r\n        },\r\n\r\n        cmp: function (param1, param2) {\r\n            return new Promise(function (resolve, reject) {\r\n                try {\r\n                    resolve(indexedDB.cmp(param1, param2));\r\n                } catch (e) {\r\n                    reject(e);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\r\n        module.exports = db;\r\n    } else if (typeof define === 'function' && define.amd) {\r\n        define(function () { return db; });\r\n    } else {\r\n        local.db = db;\r\n    }\r\n}(self));\r\n"]}