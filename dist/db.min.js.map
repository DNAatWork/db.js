{"version":3,"sources":["../src/db.js"],"names":["local","mongoDBToKeyRangeArgs","opts","keys","Object","sort","length","key","val","name","inclusive","TypeError","x","y","pattern","mongoifyKey","_typeof","IDBKeyRange","type","_mongoDBToKeyRangeArg2","apply","_toConsumableArray","args","webkitIDBKeyRange","transactionModes","readonly","readwrite","hasOwn","prototype","hasOwnProperty","indexedDB","webkitIndexedDB","mozIndexedDB","oIndexedDB","msIndexedDB","shimIndexedDB","Error","dbCache","runQuery","cursorType","direction","limitRange","filters","mapper","Promise","resolve","reject","keyRange","e","results","indexArgs","transaction","db","table","modifyObj","oncomplete","onerror","onabort","store","objectStore","push","modifyRecord","record","modifyKeys","forEach","index","onsuccess","cursor","target","result","counter","advance","_ret","matchFilter","filter","err","v","update","Query","queuedError","defaultMapper","unique","execute","error","_key","arguments","slice","unshift","count","desc","distinct","map","_key2","modify","limit","fn","_this","this","range","undefined","concat","query","all","closed","_key3","records","reduce","aip","_this2","preventDefault","req","item","add","keyPath","source","defineProperty","value","enumerable","_key4","_this3","put","remove","clear","close","version","get","IndexQuery","addEventListener","eventName","handler","serverEvents","includes","removeEventListener","evName","noServerMethods","some","call","objectStoreNames","storeName","_this4","createSchema","schema","server","i","currentTarget","deleteObjectStore","ret","tableName","contains","createObjectStore","indexes","indexKey","createIndex","err2","_open","s","Server","open","options","then","_ret2","request","onupgradeneeded","onblocked","ev","res","rej","resume","delete","dbName","newVersion","Proxy","oldVersion","cmp","param1","param2","module","exports","define","amd"],"mappings":"+9CACI,SAAAA,GAoBI,QAAMC,GAAOC,GACb,GAAIC,GAAKC,OAALD,KAAmBD,GAAAG,MACnB,IAAY,IAAZF,EAAMG,OADa,CAEnB,GAAMC,GAAMJ,EAAK,GACbK,EAAAN,EAAAK,GAAME,EAAA,OACVC,EAAA,MACA,QAAAH,GAAW,IAAA,KADXE,EAEA,MAAA,MACI,KAAA,KACAA,EAAA,aACAC,GAHJ,CAFA,MAOI,KAAA,KACAD,EAAA,aACAC,GAHJ,CANA,MAUY,KAAA,MAVZD,EAWA,YAAA,MAAY,KAAA,MAXZA,EAAA,YAAA,MAYS,SAhBU,KAAA,IAAAE,WAAA,IAAAJ,EAAA,wBAAvB,OAAAE,GAAAD,EAAAE,IAqBA,GAAME,GAAIV,EAAKC,EAAK,IACdU,EAAAX,EAAAC,EAAU,iBAGhB,QAAAW,GACI,IAAA,QAAQ,IAAA,SAAS,IAAO,SAAY,IAAM,UAF9C,OAAA,SAAAF,EAAAC,EAAA,OAAAV,EAAA,GAAA,OAAAA,EAAA,IAGS,SA7ByB,KAAA,IAAAQ,WAAA,IAAAG,EAAA,0BAmClC,QAAIC,GAAOR,SAA0D,kCAC9C,YAAsBS,EADwBT,OAAAA,YAAAU,IAAA,qBACtDC,EAAAC,EAAA,SADf,OAAAF,GAAAC,GAAAE,MAAAH,EAAAI,EAAAC,IADJ,MAAAf,GAlDA,GAAMU,GAAAjB,EAAmBiB,aAAAjB,EAAAuB,kBACrBC,GACAC,SAAA,WANUC,UAAA,aASRC,EAAAvB,OAAgBwB,UAAhBC,iBAAqB,SAAAjB,GATb,MAAAA,IAcNkB,EAAU9B,EAAM8B,WAAA9B,EAAhB+B,iBADgC/B,EAAAgC,cAAAhC,EAAAiC,YAAAjC,EAAAkC,aAAAlC,EAAAmC,eAAA,WAb1B,KAAA,IAAAC,OAAA,yBAkBRC,+EAgDEC,EAAW,SAAkBpB,EAAAI,EAASiB,EAAQC,EAAAC,EAAAC,EAAAC,GAC1C,MAAA,IAAIC,SAAA,SADsCC,EAAAC,GAE1C,GAAIC,GAAA,MACA,KACFA,EAAU7B,EAAAD,EAAAC,GAAAE,MAAAH,EAAAI,EAAAC,IAAA,KACR,MAAA0B,GADF,WAEEF,GAFQE,GAKZ,GAAMC,MACFC,GAVsCH,OAa1CI,EAAYC,EAAAD,YAAaE,EAAAC,EAAA9B,EAAAE,UAAAF,EAAAC,YAAM8B,WAAQ,WAbG,MAAAV,GAAAI,MAcfO,QAAA,SAAAR,GAde,MAAAF,GAAAE,MAefS,QAAA,SAAAT,GAfe,MAAAF,GAAAE,GAAA,IAkBpCU,GAAQP,EAAYQ,YAAYN,mBAGtCZ,GAAUA,GArBgC,KAsB1CC,EAAIA,MACe,UAAfH,GADJW,EAAAU,KAAApB,GAAA,kCASIqB,EAAW,SAAeC,GA/BY,MAgClCC,GAAIC,QAAM,SADYzD,GAEtB,GAAIC,GAAA8C,EAAe/C,EAAwB,mBAAJC,KAAvCA,EAAAA,EAAAsD,IAH+BA,EAAAvD,GAAAC,IA9BGsD,EAwCtCG,GAAA1B,GAAenB,MAAE6C,EAAOf,GAD6BgB,UAAA,SAAAlB,GAErD,GAAImB,GAAOnB,EAAAoB,OAAWC,MAClB,IAD4B,gBAC5BF,GADJlB,EAEWkB,MACP,IAAIA,EACA,GAAU,OAAV1B,GAAAA,EADgD,GAAA6B,EAEhDA,EAAO7B,EAAQ,GAFnB0B,EAGWI,QAAA9B,EAAA,yCAGP,GAAA+B,GAAI,WACJ,GAAIC,IAAS,6BAaT,IAVA/B,EAAIsB,QAAA,SAAYU,iBAETD,EACW,IAAdC,EAAApE,OACGmE,GAAAJ,EAAAK,EAAA,MAAAA,EAAA,GAFAD,GAAAC,EAAA,GAAAL,MAQPI,EAAA,CAGI,OAAAnB,EAAI,CACA,IACFe,EAAAR,EAAYQ,GACV,MAAAM,SACA7B,GAAA6B,IAFUC,EAAA,QAHlBT,EAAAU,OAAAR,GAUI,IACFpB,EAAAW,KAAYjB,EAAA0B,IACV,MAAAM,SACA7B,GAAA6B,IAFUC,EAAA,SA5BfT,EAAAA,gBAFA,IAAA,YAAA,mBAAAK,GAAA,YAAAxD,EAAAwD,IAAA,MAAAA,GAAAI,OA2CnBE,EAAI,SADyC5D,EAAAI,EAAAyD,GAE7C,GAAIvC,GAAA,OACED,EAHuC,aAIzCG,KACAD,EAAS,KACTE,EAASqC,EACPC,GAAQ,SAGVC,EAAA,WACI,MAAAC,GADJvC,QAAAE,OAAAqC,GAVyC7C,EAAApB,EAAAI,EAAAiB,EAAA0C,EAAAzC,EAAA,SAAAA,EAAAC,EAAAC,EAAAC,mEAgBZrB,EAAA8D,GAAAC,UAAAD,EAOzB,OALJ3C,GAAInB,EAAWgE,MAAX,EAAA,GAAyB,IACzB7C,EAAWnC,QADfmC,EAAA8C,QAAA,IAF6BL,QAAAA,IAW7BM,EAAA,WAII,MAHJhD,GAAA,gBAFsB0C,QAAAA,IAUtB/E,EAAA,WAGI,0BACAsF,KAAAA,EACAP,QAAAA,EACAR,OAAAA,EACAgB,SALGA,EAHcC,IAAAA,qEAWSrE,EAAAsE,GAAAP,UAAAO,EAI1B,8BACAzF,KAAAA,EACA+E,QAAAA,EACAR,OAAAA,EACAe,KAAAA,EACAC,SAAAA,EACAG,OAAAA,EACAC,MAAAA,EAX0BH,IAAAA,IAe9BF,EAAA,WAGI,iBACAtF,KAAAA,EACA+E,QAAAA,EACAR,OAAAA,EACAgB,SAAAA,EACAG,OANGA,EAHcF,IAAAA,IAarBD,EAAS,WAEL,MADJT,IAAO,GAEH9E,KAAAA,EACAqF,MAAAA,EACAN,QAAAA,EACAR,OAAAA,EACAe,KAAAA,EACAI,OAPGA,EAFkBF,IAAAA,IAazBE,EAAA,SAAsBhB,GAElB,MADJvB,GAAOuB,GAAA,YAAA,mBAAAA,GAAA,YAAA7D,EAAA6D,IAAAA,EAAA,MAFsBK,QAAAA,IAO7BS,EAAA,QADsBA,GAAAI,GAIlB,YACAb,QAAAA,EACAM,MAAAA,EACArF,KAAAA,EACAuE,OAAAA,EACAe,KAAAA,EACAC,SAAAA,EACAG,OAAAA,EACAC,MAAAA,EAZkBH,IAAAA,GAiBtB,QACAT,QAAAA,EACAM,MAAAA,EACArF,KAAAA,EACAuE,OAAAA,EACAe,KAAAA,EACAC,SAAAA,EACAG,OAAAA,EACAC,MAAAA,EAnHyCH,IAAAA,KAwH7C,OAAA,QAAa,aAAY,cAAA3B,QAAA,SAAAvD,GACrBuF,EAAAvF,GAAO,WAFiD,MAAAqE,GAAArE,EAAA4E,cAO5DY,KAAAC,MAAI,SADqBhG,GAEzB,GAAIiF,GAAA,OACApC,GAAA,KAAA,KACA,KACFA,EAAU9C,EAAAC,GACR,MAAA8C,GADFmC,EAAAnC,EA/N2D,MAAA8B,GAAA1D,MAAA+E,OAAA9E,EAAA0B,GAAAqD,QAAAjB,MAsO7Dc,KAAAvB,OAAM,WACN,GAAA2B,GAAOvB,EAAM,KAAN,KAvOsD,OAAAuB,GAAA3B,OAAAtD,MAAAiF,EAAAhB,YA2O7DY,KAAAK,IAAO,WA3OsD,MAAAL,MAAAvB,8CA4b7D,sBA1MsB,WAH+B,MAAAtB,kBAInC,WAJmC,MAAAmD,mFAMpBjF,EAAAkF,EAAA,GAAAnB,UAAAmB,8CAGzB,IAAAD,EADJ,WAEIzD,GAFQ,GAAAV,OAAA,4BAMR,IAAAqE,GAAOnF,EAAQoF,OAAO,SAD0BD,EAAAE,GAEjD,MARuCF,GAAAL,OAAAO,QAW1CxD,EAAYC,EAAAD,YAAaE,EAAA7B,EAAAE,aAAM6B,WAAQ,WAXG,MAAAV,GAAA4D,EAAAG,0BAgBtC5D,EAAA6D,iBAhBsC/D,EAAAE,MAkBfS,QAAA,SAAAT,GAlBe,MAAAF,GAAAE,GAqB1C,IAAAU,GAAQP,EAAQQ,YAAkBN,EAC9BoD,GAAIzC,QAAA,SAD0BF,GAE9B,GAAIgD,GAAA,MACA,IAAAhD,EAAMiD,MAAMjD,EADevD,IAAA,CAE3B,GAAAA,GAASuD,EAAOvD,GAChBuD,GAAMA,EAAUiD,KAHpBD,EAIOpD,EAAAsD,IAAAlD,EAAAvD,OAJPuG,GAAApD,EAAAsD,IAAAlD,EASIgD,GAAA5C,UAAM,SADmBlB,GAEzB,GAAIoB,GAAApB,EAAUoB,OACV6C,EAAA7C,EAAA8C,OAAkBD,OACR,QAAVA,IADJA,EAAA,UAII7G,OAAA+G,eAAcrD,EAAPmD,GACPG,MAAAhD,EAAYC,OARSgD,YAAA,4FAeD/F,EAAAgG,EAAA,GAAAjC,UAAAiC,8CAG5B,IAAAf,EADJ,WAEIzD,GAFQ,GAAAV,OAAA,4BAMZ,IAAAe,GAAYC,EAAAD,YAAaE,EAAA7B,EAAAE,aAAM6B,WAAQ,WAPG,MAAAV,GAAA4D,EAAAc,MAQf/D,QAAA,SAAAR,GARe,MAAAF,GAAAE,MASfS,QAAA,SAAAT,GATe,MAAAF,GAAAE,GAY1C,IAAMU,GAAAP,EAAeQ,YAAiBN,GAClCoD,EAAOnF,EAAQoF,OAAO,SAD0BD,EAAAE,GAEjD,MAduCF,GAAAL,OAAAO,OAgBtCF,GAAIzC,QAAO,SAAQF,GACf,GAAAA,EAAMiD,MAAMjD,EADevD,IAAA,CAE3B,GAAAA,GAASuD,EAAOvD,GAChBuD,GAAAA,EAAAiD,KAHJrD,EAIO8D,IAAA1D,EAAAvD,OAJPmD,GAAA8D,IAAA1D,QAYRmC,KAAAuB,IAAO,WAlF8C,MAAAvB,MAAApB,OAAAzD,MAAA6E,KAAAZ,YAsFrDY,KAAAwB,OAAO,SAAYpE,EAAA9C,GACf,MAAA,IAAIqC,SAAQ,SAAAC,EAAAC,GACR,GAAAyD,EADJ,WAEIzD,GAFQ,GAAAV,OAAA,4BAKZ,IAAAe,GAAYC,EAAAD,YAAaE,EAAA7B,EAAAE,aAAM6B,WAAA,WANW,MAAAV,GAAAtC,MAOfiD,QAAA,SAAAR,GAPe,MAAAF,GAAAE,MAQfS,QAAA,SAAAT,GARe,MAAAF,GAAAE,GAW1C,IAAAU,GAAAP,EAX0CQ,YAAAN,EADdK,GAAAA,UAAAnD,MAiBhC0F,KAAAA,UAAO,WAtG8C,MAAAA,MAAAwB,OAAArG,MAAA6E,KAAAZ,YA0GrDY,KAAAyB,MAAO,SAAYrE,GACf,MAAA,IAAIT,SAAQ,SAAAC,EAAAC,GACR,GAAAyD,EADJ,WAEIzD,GAFQ,GAAAV,OAAA,4BAKZ,IAAAe,GAAYC,EAAAD,YAAaE,EAAA7B,EAAAE,aAAM6B,WAAA,WANW,MAAAV,QAOfW,QAAA,SAAAR,GAPe,MAAAF,GAAAE,MAQfS,QAAA,SAAAT,GARe,MAAAF,GAAAE,GAW1C,IAAAU,GAAAP,EAX0CQ,YAAAN,EADpBK,GAAAgE,WAiB1BzB,KAAA0B,MAAO,WACH,MAAA,IAAI/E,SAAQ,SAAAC,EAAAC,GACRyD,GADJzD,EAAA,GAAAV,OAAA,6BAIAgB,EAAAuE,QACApB,GAAO,QACPlE,GAP0C5B,GAAAmH,GADzB/E,OAarBoD,KAAA4B,IAAO,SAAIxE,EAAQ9C,GACf,MAAA,IAAIqC,SAAQ,SAAAC,EAAAC,GACR,GAAAyD,EADJ,WAEIzD,GAFQ,GAAAV,OAAA,4BAKZ,IAAAe,GAAYC,EAAZD,YAAsBE,KAAKG,QAAA,SAAAR,GANe,MAAAF,GAAAE,MAOfS,QAAA,SAAAT,GAPe,MAAAF,GAAAE,0BAYtC,KACFzC,EAAAQ,EAAUR,GACR,MAAAyC,GADF,WAEEF,GAFQE,GAKZ,GAAI8D,GAAApD,EAAYmE,IAAAtH,eAAK,SAAUyC,GAlBW,MAAAH,GAAAG,EAAAoB,OAAAC,YAuB9C4B,KAAAI,MAAM,SAAQhD,EAAaY,GAC3B,GAAAkB,GAAWoB,EAAJ,GAAenE,OAAf,4BAAP,IA9JqD,OAAA,IAAA0F,GAAAzE,EAAAD,EAAAa,EAAAkB,IAkKrDc,KAAAT,MAAO,SAAYnC,EAAA9C,GACf,MAAA,IAAIqC,SAAQ,SAAAC,EAAAC,GACR,GAAAyD,EADJ,WAEIzD,GAFQ,GAAAV,OAAA,4BAKZ,IAAAe,GAAYC,EAAZD,YAAsBE,KAAKG,QAAA,SAAAR,GANS,MAAAF,GAAAE,MAOTS,QAAA,SAAAT,GAPS,MAAAF,GAAAE,GAUpC,IAAIU,GAAAP,EAAAQ,YAAAN,EACA,KACF9C,EAAAQ,EAAUR,GACR,MAAAyC,GADF,WAEEF,GAFQE,GAKZ,GAAI8D,GAAYX,SAAZ5F,EAAYmD,EAAA8B,QAAA9B,EAAA8B,MAAAjF,eAAK,SAAUyC,GAjBK,MAAAH,GAAAG,EAAAoB,OAAAC,YAsBxC4B,KAAA8B,iBAAkB,SAASC,EAAYC,GACnC,IAAAC,EAAUC,SAAMH,GADpB,KAAA,IAAA5F,OAAA,2BAAA4F,EAxLqD5E,GAAA2E,iBAAAC,EAAAC,IA+LrDhC,KAAAmC,oBAAkB,SAASJ,EAAYC,GACnC,IAAAC,EAAUC,SAAMH,GADpB,KAAA,IAAA5F,OAAA,2BAAA4F,EA/LqD5E,GAAAgF,oBAAAJ,EAAAC,IAsMrDC,EAAKlE,QAAU,SAAUqE,GACrBpC,KAAAoC,GAAK,SAALJ,GAF+B,MAG/BhC,MAAA8B,iBAF8BM,EAAAJ,GADChC,cAQnCqC,EAAA,CAIJ,GAAG3D,GAAK,MA9fE,UA+fN4D,KAAIC,KAAApF,EAAKqF,iBAAY,SAAAC,GACjB,GAAAC,EAAMD,GADV,MAEI/D,GAAA,GAAKvC,OAFY,oBAAAsG,EAAA,4EAGjBC,EAAOhB,SAHX,CAMAgB,GAAMD,KACN,IAAAvI,GAAAC,OAAYD,KAAAwI,YAAS,SAAKpI,GACrB,UAAI6F,OAAA8B,GAAA,QAAA,mBAAA,wBAAAC,SAAA5H,kBACDA,gGAAuB,OAAAoI,GAAApI,GAAAa,MAAAuH,GAAAD,GAAAtC,OAAA9E,SAxgBzBqD,IA+gBViE,EAAe,SAAqB5F,EAAA6F,EAAAzF,EAAA0F,EAAAlB,GAChC,GAAAiB,GADgC,IAAAA,EAAAvI,OAChC,CAIA,IAAA,GAAMyI,GAAA,EAAOA,EAAG3F,EAAAqF,iBADiCnI,OAAAyI,IAAA,CAEjD,GAAItI,GAAC2C,EAAOqF,iBAARM,gBAAJ/F,EAAAgG,cAAA7F,YAAAC,GAAA6F,kBAAAxI,GAaJ,GAAAyI,GAAO,MAliBG,OAmiBN9I,QAAAD,KAAM0I,GAAQN,KAAO,SADqBY,GAE1C,GAAI9F,GAAAwF,EAFsCM,GAGtCzF,EAAG,MACH,IAAAN,EAAAqF,iBAAUW,SAAcD,GAD5BzF,EAEOV,EAAAgG,cAAA7F,YAAAQ,YAAAwF,OAcC,KACFzF,EAAAN,EAAYiG,kBAAAF,EAAA9F,EAAA9C,cAAZ,MAIE2I,GAAAvE,GAJF,EASFvE,OAAAD,KAAIkD,EAAAiG,aAAAf,KAAA,SAAAgB,GACA,IACF7F,EAAOO,MAAKsF,GACV,MAAI5E,GACJ,GAAAV,GAAQZ,EAASiG,QAAOC,gEAapB,KACF7F,EAAO8F,YAAMD,EAAAtF,EAAAgD,SAAAhD,EAAA1D,KAAAgJ,EAAAtF,YAAb,MAIEiF,GAAAO,GAJF,QAjlBJP,IA8lBVQ,EAAM,SAAc1G,EADoC8F,EAAAR,EAAAV,GAExD,GAAAxE,GAAQJ,EAAAoB,OAAQC,gBAGhB,IAAAsF,GAAO,GAAAC,GAAAxG,EAAa0F,EAAQR,EAAoBV,EAlmBtC,OAAA+B,aAAAvH,OAAAQ,QAAAE,OAAA6G,GAAA/G,QAAAC,QAAA8G,IAsmBVvG,GACAwE,QAAM,SACFiC,KAAA,SAAaC,GACb,GAAIhB,GAAAgB,EAAUhB,OACVlB,EAASkC,EAAQlC,SAHA,EAIjBiB,EAAAiB,EAAAjB,0BAMA,OAHAxG,GAAQyG,KADZzG,EAAAyG,OAII,GAAIlG,SAAQ,SAAQC,EAAUC,GAC1B,GAAAT,EAAKyG,GAAAlB,GACD8B,GACItF,QADJC,OAAAhC,EAAAyG,GAAAlB,KAKDkB,EAAAR,EAAAV,GAAAmC,KAAAlH,EAAAC,QACH,GAAAkH,GAAI,WACA,GAAI,kBAAAnB,GACA,IACFA,EAAUA,IACR,MAAA7F,SACAF,GAAAE,IAFQ4B,EAAA,sCAOiB,SAAQ5B,GAArB,MAAA0G,GAAA1G,EAAA8F,EAAAR,EAAAV,GAAAmC,KAAAlH,EAAAC,IAEhBmH,EAAIC,gBAAM,SAAAlH,GACV,GAAI2B,GAAKiE,EAAA5F,EAAA6F,EAAA7F,EAAAoB,OAAAC,OAAAyE,EAAAlB,OAKDqC,EAAA/F,UADqB,SAAAlB,GAJpBF,EAAA6B,MAUTsF,EAAEzG,QAAA,SAAFR,GADmBA,EAAA6D,iBAAL/D,EAAAE,IAKdiH,EAAME,UAAS,SAAYnH,mCAOnBiH,EAAA/F,UAAA,SAAiBkG,GAPsBV,EAAAU,EAAAtB,EAAAR,EAAAV,GAAAmC,KAAAM,EAAAC,cAUpB,SAAAtH,GAVoB,MAAAsH,GAAAtH,KAa/CA,GAAAuH,OAdqBA,EAALzH,EAAAE,MAlCxB,IAAA,YAAA,mBAAAgH,GAAA,YAAAhJ,EAAAgJ,IAAA,MAAAA,GAAApF,MAuDJ4F,SAAA,SAAmBC,GACf,MAAA,IAAM7H,SAAU,SAAUC,EAAAC,yCAED,SAAAE,GAHiB,MAAAH,GAAAG,cAIZ,SAAPA,GAAL,MAAAF,GAAAE,4BAIVA,EAAO,OAAPA,EAAA0H,YAAsC,mBAA/BC,OADgG3H,EAAA,GAAA2H,OAAA3H,GAAA6E,IAAA,SAAAzD,EAAA3D,GAAvG,MAFiB,eAAAA,EAAA,KAAA2D,EAAA3D,8DAcT,cAAkB2J,KADtBA,EAAAM,WAAA1H,EAAA0H,YAKI,cAAkBN,KADtBA,EAAAQ,WAAA5H,EAAA4H,YAZuCP,EAAAD,cAkBpB,SAAApH,GAlBoB,MAAAsH,GAAAtH,KAqB/CA,GAAAuH,OA1BqBA,EALiBzH,EAAAE,OAqC9C6H,IAAA,SAAWC,EAAQC,GACf,MAAA,IAAInI,SAAA,SAAAC,EAAAC,GACA,IACFD,EAAUf,EAAA+I,IAAAC,EAAAC,IACR,MAAA/H,GADFF,EAAAE,OAQO,oBAAVgI,IADiE,mBAAAA,GAAAC,QAA5ED,EAEWC,QAAO7H,EACK,kBAAZ8H,IAAYA,EAAAC,IAAED,EAAA,WAD8B,MAAA9H,KAAhDpD,EAAAoD,GAAAA;;;;;;;;AAztBX,CAAC,UAAU,KAAV,EAAiB;AACd,iBADc;;AAGd,QAAM,cAAc,MAAM,WAAN,IAAqB,MAAM,iBAAN,CAH3B;AAId,QAAM,mBAAmB;AACrB,kBAAU,UAAV;AACA,mBAAW,WAAX;KAFE,CAJQ;AAQd,QAAM,SAAS,OAAO,SAAP,CAAiB,cAAjB,CARD;AASd,QAAM,gBAAgB,SAAhB,aAAgB;eAAK;KAAL,CATR;;AAWd,QAAM,YAAY,MAAM,SAAN,IAAmB,MAAM,eAAN,IACjC,MAAM,YAAN,IAAsB,MAAM,UAAN,IAAoB,MAAM,WAAN,IAC1C,MAAM,aAAN,IAAwB,YAAY;AAChC,cAAM,IAAI,KAAJ,CAAU,oBAAV,CAAN,CADgC;KAAZ,EAFV,CAXJ;;AAiBd,QAAM,UAAU,EAAV,CAjBQ;AAkBd,QAAM,eAAe,CAAC,OAAD,EAAU,OAAV,EAAmB,eAAnB,CAAf,CAlBQ;;AAoBd,aAAS,qBAAT,CAAgC,IAAhC,EAAsC;AAClC,YAAM,OAAO,OAAO,IAAP,CAAY,IAAZ,EAAkB,IAAlB,EAAP,CAD4B;AAElC,YAAI,KAAK,MAAL,KAAgB,CAAhB,EAAmB;AACnB,gBAAM,MAAM,KAAK,CAAL,CAAN,CADa;AAEnB,gBAAM,MAAM,KAAK,GAAL,CAAN,CAFa;AAGnB,gBAAI,aAAJ;gBAAU,kBAAV,CAHmB;AAInB,oBAAQ,GAAR;AACA,qBAAK,IAAL;AAAW,2BAAO,MAAP,CAAX;AADA,qBAEK,IAAL;AACI,2BAAO,YAAP,CADJ;AAEI,gCAAY,IAAZ,CAFJ;AAGI,0BAHJ;AAFA,qBAMK,IAAL;AACI,2BAAO,YAAP,CADJ;AAEI,gCAAY,IAAZ,CAFJ;AAGI,0BAHJ;AANA,qBAUK,KAAL;AAAY,2BAAO,YAAP,CAAZ;AAVA,qBAWK,KAAL;AAAY,2BAAO,YAAP,CAAZ;AAXA;AAYS,0BAAM,IAAI,SAAJ,CAAc,MAAM,GAAN,GAAY,sBAAZ,CAApB,CAAT;AAZA,aAJmB;AAkBnB,mBAAO,CAAC,IAAD,EAAO,CAAC,GAAD,EAAM,SAAN,CAAP,CAAP,CAlBmB;SAAvB;AAoBA,YAAM,IAAI,KAAK,KAAK,CAAL,CAAL,CAAJ,CAtB4B;AAuBlC,YAAM,IAAI,KAAK,KAAK,CAAL,CAAL,CAAJ,CAvB4B;AAwBlC,YAAM,UAAU,KAAK,IAAL,CAAU,GAAV,CAAV,CAxB4B;;AA0BlC,gBAAQ,OAAR;AACA,iBAAK,OAAL,CADA,KACmB,QAAL,CADd,KACkC,QAAL,CAD7B,KACiD,SAAL;AACxC,uBAAO,CAAC,OAAD,EAAU,CAAC,CAAD,EAAI,CAAJ,EAAO,KAAK,CAAL,MAAY,IAAZ,EAAkB,KAAK,CAAL,MAAY,IAAZ,CAAnC,CAAP,CADwC;AAD5C;AAGS,sBAAM,IAAI,SAAJ,CACb,MAAM,OAAN,GAAgB,uBAAhB,CADO,CAAT;AAHA,SA1BkC;KAAtC;AAkCA,aAAS,WAAT,CAAsB,GAAtB,EAA2B;AACvB,YAAI,OAAO,QAAO,iDAAP,KAAe,QAAf,IAA2B,EAAE,eAAe,WAAf,CAAF,EAA+B;wCAC9C,sBAAsB,GAAtB,EAD8C;;;;gBAC5D,iCAD4D;gBACtD,iCADsD;;AAEjE,mBAAO,YAAY,KAAZ,uCAAqB,KAArB,CAAP,CAFiE;SAArE;AAIA,eAAO,GAAP,CALuB;KAA3B;;AAQA,QAAM,aAAa,SAAb,UAAa,CAAU,KAAV,EAAiB,EAAjB,EAAqB,SAArB,EAAgC,gBAAhC,EAAkD;;;AACjE,YAAI,YAAY,IAAZ,CAD6D;;AAGjE,YAAM,WAAW,SAAX,QAAW,CAAU,IAAV,EAAgB,IAAhB,EAAsB,UAAtB,EAAkC,SAAlC,EAA6C,UAA7C,EAAyD,OAAzD,EAAkE,MAAlE,EAA0E;AACvF,mBAAO,IAAI,OAAJ,CAAY,UAAU,OAAV,EAAmB,MAAnB,EAA2B;AAC1C,oBAAI,iBAAJ,CAD0C;AAE1C,oBAAI;AACA,+BAAW,OAAO,YAAY,KAAZ,uCAAqB,KAArB,CAAP,GAAoC,IAApC,CADX;iBAAJ,CAEE,OAAO,CAAP,EAAU;AACR,2BAAO,CAAP,EADQ;AAER,2BAFQ;iBAAV;AAIF,oBAAI,UAAU,EAAV,CARsC;AAS1C,oBAAM,YAAY,CAAC,QAAD,CAAZ,CAToC;AAU1C,oBAAI,UAAU,CAAV,CAVsC;;AAY1C,oBAAM,cAAc,GAAG,WAAH,CAAe,KAAf,EAAsB,YAAY,iBAAiB,SAAjB,GAA6B,iBAAiB,QAAjB,CAA7E,CAZoC;AAa1C,4BAAY,UAAZ,GAAyB;2BAAM,QAAQ,OAAR;iBAAN,CAbiB;AAc1C,4BAAY,OAAZ,GAAsB;2BAAK,OAAO,CAAP;iBAAL,CAdoB;AAe1C,4BAAY,OAAZ,GAAsB;2BAAK,OAAO,CAAP;iBAAL,CAfoB;;AAiB1C,oBAAM,QAAQ,YAAY,WAAZ,CAAwB,KAAxB,CAAR;AAjBoC,oBAkBpC,QAAQ,YAAY,MAAM,KAAN,CAAY,SAAZ,CAAZ,GAAqC,KAArC,CAlB4B;;AAoB1C,6BAAa,cAAc,IAAd,CApB6B;AAqB1C,0BAAU,WAAW,EAAX,CArBgC;AAsB1C,oBAAI,eAAe,OAAf,EAAwB;AACxB,8BAAU,IAAV,CAAe,aAAa,MAAb,CAAf,CADwB;iBAA5B;;;;AAtB0C,oBA4BpC,aAAa,YAAY,OAAO,IAAP,CAAY,SAAZ,CAAZ,GAAqC,EAArC,CA5BuB;;AA8B1C,oBAAM,eAAe,SAAf,YAAe,CAAU,MAAV,EAAkB;AACnC,+BAAW,OAAX,CAAmB,eAAO;AACtB,4BAAI,MAAM,UAAU,GAAV,CAAN,CADkB;AAEtB,4BAAI,OAAO,GAAP,KAAe,UAAf,EAA2B;AAAE,kCAAM,IAAI,MAAJ,CAAN,CAAF;yBAA/B;AACA,+BAAO,GAAP,IAAc,GAAd,CAHsB;qBAAP,CAAnB,CADmC;AAMnC,2BAAO,MAAP,CANmC;iBAAlB,CA9BqB;;AAuC1C,sBAAM,WAAN,cAAqB,SAArB,EAAgC,SAAhC,GAA4C,UAAU,CAAV,EAAa;AACrD,wBAAM,SAAS,EAAE,MAAF,CAAS,MAAT,CADsC;AAErD,wBAAI,OAAO,MAAP,KAAkB,QAAlB,EAA4B;AAC5B,kCAAU,MAAV,CAD4B;qBAAhC,MAEO,IAAI,MAAJ,EAAY;AACf,4BAAI,eAAe,IAAf,IAAuB,WAAW,CAAX,IAAgB,OAAhB,EAAyB;AAChD,sCAAU,WAAW,CAAX,CAAV,CADgD;AAEhD,mCAAO,OAAP,CAAe,WAAW,CAAX,CAAf,EAFgD;yBAApD,MAGO,IAAI,eAAe,IAAf,IAAuB,WAAY,WAAW,CAAX,IAAgB,WAAW,CAAX,CAAhB,EAAgC;;yBAAvE,MAEA;;AACH,wCAAI,cAAc,IAAd;AACJ,wCAAI,SAAS,WAAW,MAAX,GAAoB,OAAO,KAAP,GAAe,OAAO,GAAP;;AAEhD,4CAAQ,OAAR,CAAgB,UAAU,MAAV,EAAkB;AAC9B,4CAAI,CAAC,MAAD,IAAW,CAAC,OAAO,MAAP,EAAe;;yCAA/B,MAEO,IAAI,OAAO,MAAP,KAAkB,CAAlB,EAAqB;AAC5B,8DAAc,eAAgB,OAAO,OAAO,CAAP,CAAP,MAAsB,OAAO,CAAP,CAAtB,CADF;6CAAzB,MAEA;AACH,8DAAc,eAAe,OAAO,CAAP,EAAU,MAAV,CAAf,CADX;6CAFA;qCAHK,CAAhB;;AAUA,wCAAI,WAAJ,EAAiB;AACb;;AADa,4CAGT,SAAJ,EAAe;AACX,gDAAI;AACA,yDAAS,aAAa,MAAb,CAAT,CADA;6CAAJ,CAEE,OAAO,GAAP,EAAY;AACV,uDAAO,GAAP,EADU;AAEV;;kDAFU;6CAAZ;AAIF,mDAAO,MAAP,CAAc,MAAd,EAPW;yCAAf;AASA,4CAAI;AACA,oDAAQ,IAAR,CAAa,OAAO,MAAP,CAAb,EADA;yCAAJ,CAEE,OAAO,GAAP,EAAY;AACV,mDAAO,GAAP,EADU;AAEV;;8CAFU;yCAAZ;qCAdN;AAmBA,2CAAO,QAAP;oCAjCG;;;6BAFA;qBAJJ;iBAJiC,CAvCF;aAA3B,CAAnB,CADuF;SAA1E,CAHgD;;AA6FjE,YAAM,QAAQ,SAAR,KAAQ,CAAU,IAAV,EAAgB,IAAhB,EAAsB,WAAtB,EAAmC;AAC7C,gBAAI,YAAY,MAAZ,CADyC;AAE7C,gBAAI,aAAa,YAAb,CAFyC;AAG7C,gBAAM,UAAU,EAAV,CAHuC;AAI7C,gBAAI,aAAa,IAAb,CAJyC;AAK7C,gBAAI,SAAS,aAAT,CALyC;AAM7C,gBAAI,SAAS,KAAT,CANyC;AAO7C,gBAAM,QAAQ,oBAAoB,WAApB,CAP+B;;AAS7C,gBAAM,UAAU,SAAV,OAAU,GAAY;AACxB,oBAAI,KAAJ,EAAW;AACP,2BAAO,QAAQ,MAAR,CAAe,KAAf,CAAP,CADO;iBAAX;AAGA,uBAAO,SAAS,IAAT,EAAe,IAAf,EAAqB,UAArB,EAAiC,SAAS,YAAY,QAAZ,GAAuB,SAAhC,EAA2C,UAA5E,EAAwF,OAAxF,EAAiG,MAAjG,CAAP,CAJwB;aAAZ,CAT6B;;AAgB7C,gBAAM,QAAQ,SAAR,KAAQ,GAAmB;kDAAN;;iBAAM;;AAC7B,6BAAa,KAAK,KAAL,CAAW,CAAX,EAAc,CAAd,CAAb,CAD6B;AAE7B,oBAAI,WAAW,MAAX,KAAsB,CAAtB,EAAyB;AACzB,+BAAW,OAAX,CAAmB,CAAnB,EADyB;iBAA7B;;AAIA,uBAAO;AACH,oCADG;iBAAP,CAN6B;aAAnB,CAhB+B;AA0B7C,gBAAM,QAAQ,SAAR,KAAQ,GAAY;AACtB,4BAAY,IAAZ,CADsB;AAEtB,6BAAa,OAAb,CAFsB;;AAItB,uBAAO;AACH,oCADG;iBAAP,CAJsB;aAAZ,CA1B+B;;AAmC7C,gBAAM,OAAO,SAAP,IAAO,GAAY;AACrB,6BAAa,eAAb,CADqB;;AAGrB,uBAAO;AACH,8BADG;AAEH,oCAFG;AAGH,kCAHG;AAIH,sCAJG;AAKH,4BALG;iBAAP,CAHqB;aAAZ,CAnCgC;AA8C7C,gBAAM,SAAS,SAAT,MAAS,GAAmB;mDAAN;;iBAAM;;AAC9B,wBAAQ,IAAR,CAAa,KAAK,KAAL,CAAW,CAAX,EAAc,CAAd,CAAb,EAD8B;;AAG9B,uBAAO;AACH,8BADG;AAEH,oCAFG;AAGH,kCAHG;AAIH,8BAJG;AAKH,sCALG;AAMH,kCANG;AAOH,gCAPG;AAQH,4BARG;iBAAP,CAH8B;aAAnB,CA9C8B;AA4D7C,gBAAM,OAAO,SAAP,IAAO,GAAY;AACrB,4BAAY,MAAZ,CADqB;;AAGrB,uBAAO;AACH,8BADG;AAEH,oCAFG;AAGH,kCAHG;AAIH,sCAJG;AAKH,kCALG;AAMH,4BANG;iBAAP,CAHqB;aAAZ,CA5DgC;AAwE7C,gBAAM,WAAW,SAAX,QAAW,GAAY;AACzB,yBAAS,IAAT,CADyB;AAEzB,uBAAO;AACH,8BADG;AAEH,gCAFG;AAGH,oCAHG;AAIH,kCAJG;AAKH,8BALG;AAMH,kCANG;AAOH,4BAPG;iBAAP,CAFyB;aAAZ,CAxE4B;AAoF7C,gBAAM,SAAS,SAAT,MAAS,CAAU,MAAV,EAAkB;AAC7B,4BAAY,UAAU,QAAO,uDAAP,KAAkB,QAAlB,GAA6B,MAAvC,GAAgD,IAAhD,CADiB;AAE7B,uBAAO;AACH,oCADG;iBAAP,CAF6B;aAAlB,CApF8B;AA0F7C,gBAAM,MAAM,SAAN,GAAM,CAAU,EAAV,EAAc;AACtB,yBAAS,EAAT,CADsB;;AAGtB,uBAAO;AACH,oCADG;AAEH,gCAFG;AAGH,8BAHG;AAIH,kCAJG;AAKH,8BALG;AAMH,sCANG;AAOH,kCAPG;AAQH,gCARG;AASH,4BATG;iBAAP,CAHsB;aAAd,CA1FiC;;AA0G7C,mBAAO;AACH,gCADG;AAEH,4BAFG;AAGH,0BAHG;AAIH,8BAJG;AAKH,0BALG;AAMH,kCANG;AAOH,8BAPG;AAQH,4BARG;AASH,wBATG;aAAP,CA1G6C;SAAnC,CA7FmD;;AAoNjE,SAAC,MAAD,EAAS,OAAT,EAAkB,YAAlB,EAAgC,YAAhC,EAA8C,OAA9C,CAAsD,UAAC,IAAD,EAAU;AAC5D,kBAAK,IAAL,IAAa,YAAY;AACrB,uBAAO,MAAM,IAAN,EAAY,SAAZ,CAAP,CADqB;aAAZ,CAD+C;SAAV,CAAtD,CApNiE;;AA0NjE,aAAK,KAAL,GAAa,UAAU,IAAV,EAAgB;AACzB,gBAAI,cAAJ,CADyB;AAEzB,gBAAI,WAAW,CAAC,IAAD,EAAO,IAAP,CAAX,CAFqB;AAGzB,gBAAI;AACA,2BAAW,sBAAsB,IAAtB,CAAX,CADA;aAAJ,CAEE,OAAO,CAAP,EAAU;AACR,wBAAQ,CAAR,CADQ;aAAV;AAGF,mBAAO,0CAAS,kBAAU,OAAnB,CAAP,CARyB;SAAhB,CA1NoD;;AAqOjE,aAAK,MAAL,GAAc,YAAmB;AAC7B,gBAAM,QAAQ,MAAM,IAAN,EAAY,IAAZ,CAAR,CADuB;AAE7B,mBAAO,MAAM,MAAN,wBAAP,CAF6B;SAAnB,CArOmD;;AA0OjE,aAAK,GAAL,GAAW,YAAY;AACnB,mBAAO,KAAK,MAAL,EAAP,CADmB;SAAZ,CA1OsD;KAAlD,CA9DL;;AA6Sd,QAAM,SAAS,SAAT,MAAS,CAAU,EAAV,EAAc,IAAd,EAAoB,eAApB,EAAqC,OAArC,EAA8C;;;AACzD,YAAI,SAAS,KAAT,CADqD;;AAGzD,aAAK,YAAL,GAAoB;mBAAM;SAAN,CAHqC;AAIzD,aAAK,QAAL,GAAgB;mBAAM;SAAN,CAJyC;;AAMzD,aAAK,GAAL,GAAW,UAAU,KAAV,EAA0B;+CAAN;;aAAM;;AACjC,mBAAO,IAAI,OAAJ,CAAY,UAAU,OAAV,EAAmB,MAAnB,EAA2B;;;AAC1C,oBAAI,MAAJ,EAAY;AACR,2BAAO,IAAI,KAAJ,CAAU,0BAAV,CAAP,EADQ;AAER,2BAFQ;iBAAZ;;AAKA,oBAAM,UAAU,KAAK,MAAL,CAAY,UAAU,OAAV,EAAmB,GAAnB,EAAwB;AAChD,2BAAO,QAAQ,MAAR,CAAe,GAAf,CAAP,CADgD;iBAAxB,EAEzB,EAFa,CAAV,CANoC;;AAU1C,oBAAM,cAAc,GAAG,WAAH,CAAe,KAAf,EAAsB,iBAAiB,SAAjB,CAApC,CAVoC;AAW1C,4BAAY,UAAZ,GAAyB;2BAAM,QAAQ,OAAR;iBAAN,CAXiB;AAY1C,4BAAY,OAAZ,GAAsB,aAAK;;;AAGvB,sBAAE,cAAF,GAHuB;AAIvB,2BAAO,CAAP,EAJuB;iBAAL,CAZoB;AAkB1C,4BAAY,OAAZ,GAAsB;2BAAK,OAAO,CAAP;iBAAL,CAlBoB;;AAoB1C,oBAAM,QAAQ,YAAY,WAAZ,CAAwB,KAAxB,CAAR,CApBoC;AAqB1C,wBAAQ,OAAR,CAAgB,UAAU,MAAV,EAAkB;AAC9B,wBAAI,YAAJ,CAD8B;AAE9B,wBAAI,OAAO,IAAP,IAAe,OAAO,GAAP,EAAY;AAC3B,4BAAM,MAAM,OAAO,GAAP,CADe;AAE3B,iCAAS,OAAO,IAAP,CAFkB;AAG3B,8BAAM,MAAM,GAAN,CAAU,MAAV,EAAkB,GAAlB,CAAN;AAH2B,qBAA/B,MAIO;AACH,kCAAM,MAAM,GAAN,CAAU,MAAV,CAAN,CADG;yBAJP;;AAQA,wBAAI,SAAJ,GAAgB,UAAU,CAAV,EAAa;AACzB,4BAAM,SAAS,EAAE,MAAF,CADU;AAEzB,4BAAI,UAAU,OAAO,MAAP,CAAc,OAAd,CAFW;AAGzB,4BAAI,YAAY,IAAZ,EAAkB;AAClB,sCAAU,QAAV,CADkB;yBAAtB;AAGA,+BAAO,cAAP,CAAsB,MAAtB,EAA8B,OAA9B,EAAuC;AACnC,mCAAO,OAAO,MAAP;AACP,wCAAY,IAAZ;yBAFJ,EANyB;qBAAb,CAVc;iBAAlB,CAAhB,CArB0C;aAA3B,CAAnB,CADiC;SAA1B,CAN8C;;AAqDzD,aAAK,MAAL,GAAc,UAAU,KAAV,EAA0B;+CAAN;;aAAM;;AACpC,mBAAO,IAAI,OAAJ,CAAY,UAAU,OAAV,EAAmB,MAAnB,EAA2B;;;AAC1C,oBAAI,MAAJ,EAAY;AACR,2BAAO,IAAI,KAAJ,CAAU,0BAAV,CAAP,EADQ;AAER,2BAFQ;iBAAZ;;AAKA,oBAAM,cAAc,GAAG,WAAH,CAAe,KAAf,EAAsB,iBAAiB,SAAjB,CAApC,CANoC;AAO1C,4BAAY,UAAZ,GAAyB;2BAAM,QAAQ,OAAR;iBAAN,CAPiB;AAQ1C,4BAAY,OAAZ,GAAsB;2BAAK,OAAO,CAAP;iBAAL,CARoB;AAS1C,4BAAY,OAAZ,GAAsB;2BAAK,OAAO,CAAP;iBAAL,CAToB;;AAW1C,oBAAM,QAAQ,YAAY,WAAZ,CAAwB,KAAxB,CAAR,CAXoC;AAY1C,oBAAM,UAAU,KAAK,MAAL,CAAY,UAAU,OAAV,EAAmB,GAAnB,EAAwB;AAChD,2BAAO,QAAQ,MAAR,CAAe,GAAf,CAAP,CADgD;iBAAxB,EAEzB,EAFa,CAAV,CAZoC;AAe1C,wBAAQ,OAAR,CAAgB,UAAU,MAAV,EAAkB;AAC9B,wBAAI,OAAO,IAAP,IAAe,OAAO,GAAP,EAAY;AAC3B,4BAAM,MAAM,OAAO,GAAP,CADe;AAE3B,iCAAS,OAAO,IAAP,CAFkB;AAG3B,8BAAM,GAAN,CAAU,MAAV,EAAkB,GAAlB,EAH2B;qBAA/B,MAIO;AACH,8BAAM,GAAN,CAAU,MAAV,EADG;qBAJP;iBADY,CAAhB,CAf0C;aAA3B,CAAnB,CADoC;SAA1B,CArD2C;;AAiFzD,aAAK,GAAL,GAAW,YAAmB;AAC1B,mBAAO,KAAK,MAAL,uBAAP,CAD0B;SAAnB,CAjF8C;;AAqFzD,aAAK,MAAL,GAAc,UAAU,KAAV,EAAiB,GAAjB,EAAsB;AAChC,mBAAO,IAAI,OAAJ,CAAY,UAAU,OAAV,EAAmB,MAAnB,EAA2B;AAC1C,oBAAI,MAAJ,EAAY;AACR,2BAAO,IAAI,KAAJ,CAAU,0BAAV,CAAP,EADQ;AAER,2BAFQ;iBAAZ;AAIA,oBAAM,cAAc,GAAG,WAAH,CAAe,KAAf,EAAsB,iBAAiB,SAAjB,CAApC,CALoC;AAM1C,4BAAY,UAAZ,GAAyB;2BAAM,QAAQ,GAAR;iBAAN,CANiB;AAO1C,4BAAY,OAAZ,GAAsB;2BAAK,OAAO,CAAP;iBAAL,CAPoB;AAQ1C,4BAAY,OAAZ,GAAsB;2BAAK,OAAO,CAAP;iBAAL,CARoB;;AAU1C,oBAAM,QAAQ,YAAY,WAAZ,CAAwB,KAAxB,CAAR,CAVoC;AAW1C,sBAAM,MAAN,CAAa,GAAb,EAX0C;aAA3B,CAAnB,CADgC;SAAtB,CArF2C;;AAqGzD,aAAK,MAAL,GAAc,YAAmB;AAC7B,mBAAO,KAAK,MAAL,uBAAP,CAD6B;SAAnB,CArG2C;;AAyGzD,aAAK,KAAL,GAAa,UAAU,KAAV,EAAiB;AAC1B,mBAAO,IAAI,OAAJ,CAAY,UAAU,OAAV,EAAmB,MAAnB,EAA2B;AAC1C,oBAAI,MAAJ,EAAY;AACR,2BAAO,IAAI,KAAJ,CAAU,0BAAV,CAAP,EADQ;AAER,2BAFQ;iBAAZ;AAIA,oBAAM,cAAc,GAAG,WAAH,CAAe,KAAf,EAAsB,iBAAiB,SAAjB,CAApC,CALoC;AAM1C,4BAAY,UAAZ,GAAyB;2BAAM;iBAAN,CANiB;AAO1C,4BAAY,OAAZ,GAAsB;2BAAK,OAAO,CAAP;iBAAL,CAPoB;AAQ1C,4BAAY,OAAZ,GAAsB;2BAAK,OAAO,CAAP;iBAAL,CARoB;;AAU1C,oBAAM,QAAQ,YAAY,WAAZ,CAAwB,KAAxB,CAAR,CAVoC;AAW1C,sBAAM,KAAN,GAX0C;aAA3B,CAAnB,CAD0B;SAAjB,CAzG4C;;AAyHzD,aAAK,KAAL,GAAa,YAAY;AACrB,mBAAO,IAAI,OAAJ,CAAY,UAAU,OAAV,EAAmB,MAAnB,EAA2B;AAC1C,oBAAI,MAAJ,EAAY;AACR,2BAAO,IAAI,KAAJ,CAAU,0BAAV,CAAP,EADQ;iBAAZ;AAGA,mBAAG,KAAH,GAJ0C;AAK1C,yBAAS,IAAT,CAL0C;AAM1C,uBAAO,QAAQ,IAAR,EAAc,OAAd,CAAP,CAN0C;AAO1C,0BAP0C;aAA3B,CAAnB,CADqB;SAAZ,CAzH4C;;AAqIzD,aAAK,GAAL,GAAW,UAAU,KAAV,EAAiB,GAAjB,EAAsB;AAC7B,mBAAO,IAAI,OAAJ,CAAY,UAAU,OAAV,EAAmB,MAAnB,EAA2B;AAC1C,oBAAI,MAAJ,EAAY;AACR,2BAAO,IAAI,KAAJ,CAAU,0BAAV,CAAP,EADQ;AAER,2BAFQ;iBAAZ;AAIA,oBAAM,cAAc,GAAG,WAAH,CAAe,KAAf,CAAd,CALoC;AAM1C,4BAAY,OAAZ,GAAsB;2BAAK,OAAO,CAAP;iBAAL,CANoB;AAO1C,4BAAY,OAAZ,GAAsB;2BAAK,OAAO,CAAP;iBAAL,CAPoB;;AAS1C,oBAAM,QAAQ,YAAY,WAAZ,CAAwB,KAAxB,CAAR,CAToC;;AAW1C,oBAAI;AACA,0BAAM,YAAY,GAAZ,CAAN,CADA;iBAAJ,CAEE,OAAO,CAAP,EAAU;AACR,2BAAO,CAAP,EADQ;AAER,2BAFQ;iBAAV;AAIF,oBAAM,MAAM,MAAM,GAAN,CAAU,GAAV,CAAN,CAjBoC;AAkB1C,oBAAI,SAAJ,GAAgB;2BAAK,QAAQ,EAAE,MAAF,CAAS,MAAT;iBAAb,CAlB0B;aAA3B,CAAnB,CAD6B;SAAtB,CArI8C;;AA4JzD,aAAK,KAAL,GAAa,UAAU,KAAV,EAAiB,KAAjB,EAAwB;AACjC,gBAAM,QAAQ,SAAS,IAAI,KAAJ,CAAU,0BAAV,CAAT,GAAiD,IAAjD,CADmB;AAEjC,mBAAO,IAAI,UAAJ,CAAe,KAAf,EAAsB,EAAtB,EAA0B,KAA1B,EAAiC,KAAjC,CAAP;AAFiC,SAAxB,CA5J4C;;AAiKzD,aAAK,KAAL,GAAa,UAAU,KAAV,EAAiB,GAAjB,EAAsB;AAC/B,mBAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;AACpC,oBAAI,MAAJ,EAAY;AACR,2BAAO,IAAI,KAAJ,CAAU,0BAAV,CAAP,EADQ;AAER,2BAFQ;iBAAZ;AAIA,oBAAM,cAAc,GAAG,WAAH,CAAe,KAAf,CAAd,CAL8B;AAMpC,4BAAY,OAAZ,GAAsB;2BAAK,OAAO,CAAP;iBAAL,CANc;AAOpC,4BAAY,OAAZ,GAAsB;2BAAK,OAAO,CAAP;iBAAL,CAPc;;AASpC,oBAAM,QAAQ,YAAY,WAAZ,CAAwB,KAAxB,CAAR,CAT8B;AAUpC,oBAAI;AACA,0BAAM,YAAY,GAAZ,CAAN,CADA;iBAAJ,CAEE,OAAO,CAAP,EAAU;AACR,2BAAO,CAAP,EADQ;AAER,2BAFQ;iBAAV;AAIF,oBAAM,MAAM,QAAQ,SAAR,GAAoB,MAAM,KAAN,EAApB,GAAoC,MAAM,KAAN,CAAY,GAAZ,CAApC,CAhBwB;AAiBpC,oBAAI,SAAJ,GAAgB;2BAAK,QAAQ,EAAE,MAAF,CAAS,MAAT;iBAAb,CAjBoB;aAArB,CAAnB,CAD+B;SAAtB,CAjK4C;;AAuLzD,aAAK,gBAAL,GAAwB,UAAU,SAAV,EAAqB,OAArB,EAA8B;AAClD,gBAAI,CAAC,aAAa,QAAb,CAAsB,SAAtB,CAAD,EAAmC;AACnC,sBAAM,IAAI,KAAJ,CAAU,6BAA6B,SAA7B,CAAhB,CADmC;aAAvC;AAGA,eAAG,gBAAH,CAAoB,SAApB,EAA+B,OAA/B,EAJkD;SAA9B,CAvLiC;;AA8LzD,aAAK,mBAAL,GAA2B,UAAU,SAAV,EAAqB,OAArB,EAA8B;AACrD,gBAAI,CAAC,aAAa,QAAb,CAAsB,SAAtB,CAAD,EAAmC;AACnC,sBAAM,IAAI,KAAJ,CAAU,6BAA6B,SAA7B,CAAhB,CADmC;aAAvC;AAGA,eAAG,mBAAH,CAAuB,SAAvB,EAAkC,OAAlC,EAJqD;SAA9B,CA9L8B;;AAqMzD,qBAAa,OAAb,CAAqB,UAAU,MAAV,EAAkB;AACnC,iBAAK,MAAL,IAAe,UAAU,OAAV,EAAmB;AAC9B,qBAAK,gBAAL,CAAsB,MAAtB,EAA8B,OAA9B,EAD8B;AAE9B,uBAAO,IAAP,CAF8B;aAAnB,CADoB;SAAlB,EAKlB,IALH,EArMyD;;AA4MzD,YAAI,eAAJ,EAAqB;AACjB,mBADiB;SAArB;;AAIA,YAAI,YAAJ,CAhNyD;AAiNzD,WAAG,IAAH,CAAQ,IAAR,CAAa,GAAG,gBAAH,EAAqB,qBAAa;AAC3C,gBAAI,OAAK,SAAL,CAAJ,EAAqB;AACjB,sBAAM,IAAI,KAAJ,CAAU,sBAAsB,SAAtB,GAAkC,0EAAlC,CAAhB,CADiB;AAEjB,uBAAK,KAAL,GAFiB;AAGjB,uBAAO,IAAP,CAHiB;aAArB;AAKA,mBAAK,SAAL,IAAkB,EAAlB,CAN2C;AAO3C,gBAAM,OAAO,OAAO,IAAP,QAAP,CAPqC;AAQ3C,iBAAK,MAAL,CAAY;uBAAO,CAAE,UAAK,eAAc,SAAS,oBAAoB,uBAAhD,CAAwE,QAAxE,CAAiF,GAAjF,CAAF;aAAP,CAAZ,CACK,GADL,CACS;uBACD,OAAK,SAAL,EAAgB,GAAhB,IAAuB;uDAAI;;;;2BAAS,OAAK,IAAL,gBAAU,kBAAc,KAAxB;iBAAb;aADtB,CADT,CAR2C;SAAb,CAAlC,CAjNyD;AA8NzD,eAAO,GAAP,CA9NyD;KAA9C,CA7SD;;AA8gBd,QAAM,eAAe,SAAf,YAAe,CAAU,CAAV,EAAa,MAAb,EAAqB,EAArB,EAAyB,MAAzB,EAAiC,OAAjC,EAA0C;AAC3D,YAAI,CAAC,MAAD,IAAW,OAAO,MAAP,KAAkB,CAAlB,EAAqB;AAChC,mBADgC;SAApC;;AAIA,aAAK,IAAI,IAAI,CAAJ,EAAO,IAAI,GAAG,gBAAH,CAAoB,MAApB,EAA4B,GAAhD,EAAqD;AACjD,gBAAM,OAAO,GAAG,gBAAH,CAAoB,CAApB,CAAP,CAD2C;AAEjD,gBAAI,CAAC,OAAO,IAAP,CAAY,MAAZ,EAAoB,IAApB,CAAD,EAA4B;;;;;;;;AAQ5B,kBAAE,aAAF,CAAgB,WAAhB,CAA4B,EAA5B,CAA+B,iBAA/B,CAAiD,IAAjD,EAR4B;aAAhC;SAFJ;;AAcA,YAAI,YAAJ,CAnB2D;AAoB3D,eAAO,IAAP,CAAY,MAAZ,EAAoB,IAApB,CAAyB,UAAU,SAAV,EAAqB;AAC1C,gBAAM,QAAQ,OAAO,SAAP,CAAR,CADoC;AAE1C,gBAAI,cAAJ,CAF0C;AAG1C,gBAAI,GAAG,gBAAH,CAAoB,QAApB,CAA6B,SAA7B,CAAJ,EAA6C;AACzC,wBAAQ,EAAE,aAAF,CAAgB,WAAhB,CAA4B,WAA5B,CAAwC,SAAxC,CAAR;AADyC,aAA7C,MAEO;;;;;;;;;;;;;AAaH,wBAAI;AACA,gCAAQ,GAAG,iBAAH,CAAqB,SAArB,EAAgC,MAAM,GAAN,CAAxC,CADA;qBAAJ,CAEE,OAAO,GAAP,EAAY;;;AAGV,8BAAM,GAAN,CAHU;AAIV,+BAAO,IAAP,CAJU;qBAAZ;iBAjBN;;AAyBA,mBAAO,IAAP,CAAY,MAAM,OAAN,IAAiB,EAAjB,CAAZ,CAAiC,IAAjC,CAAsC,UAAU,QAAV,EAAoB;AACtD,oBAAI;AACA,0BAAM,KAAN,CAAY,QAAZ,EADA;iBAAJ,CAEE,OAAO,GAAP,EAAY;AACV,wBAAI,QAAQ,MAAM,OAAN,CAAc,QAAd,CAAR,CADM;AAEV,4BAAQ,SAAS,QAAO,qDAAP,KAAiB,QAAjB,GAA4B,KAArC,GAA6C,EAA7C;;;;;;;;;;;;AAFE,wBAcN;AACA,8BAAM,WAAN,CAAkB,QAAlB,EAA4B,MAAM,OAAN,IAAiB,MAAM,GAAN,IAAa,QAA9B,EAAwC,KAApE,EADA;qBAAJ,CAEE,OAAO,IAAP,EAAa;;;AAGX,8BAAM,IAAN,CAHW;AAIX,+BAAO,IAAP,CAJW;qBAAb;iBAhBJ;aAHgC,CAAtC,CA5B0C;SAArB,CAAzB,CApB2D;AA4E3D,eAAO,GAAP,CA5E2D;KAA1C,CA9gBP;;AA6lBd,QAAM,QAAO,SAAP,KAAO,CAAU,CAAV,EAAa,MAAb,EAAqB,eAArB,EAAsC,OAAtC,EAA+C;AACxD,YAAM,KAAK,EAAE,MAAF,CAAS,MAAT,CAD6C;AAExD,gBAAQ,MAAR,EAAgB,OAAhB,IAA2B,EAA3B,CAFwD;;AAIxD,YAAM,IAAI,IAAI,MAAJ,CAAW,EAAX,EAAe,MAAf,EAAuB,eAAvB,EAAwC,OAAxC,CAAJ,CAJkD;AAKxD,eAAO,aAAa,KAAb,GAAqB,QAAQ,MAAR,CAAe,CAAf,CAArB,GAAyC,QAAQ,OAAR,CAAgB,CAAhB,CAAzC,CALiD;KAA/C,CA7lBC;;AAqmBd,QAAM,KAAK;AACP,iBAAS,QAAT;AACA,cAAM,cAAU,OAAV,EAAmB;AACrB,gBAAI,SAAS,QAAQ,MAAR,CADQ;AAErB,gBAAI,UAAU,QAAQ,OAAR,IAAmB,CAAnB,CAFO;AAGrB,gBAAI,SAAS,QAAQ,MAAR,CAHQ;AAIrB,gBAAI,kBAAkB,QAAQ,eAAR,CAJD;;AAMrB,gBAAI,CAAC,QAAQ,MAAR,CAAD,EAAkB;AAClB,wBAAQ,MAAR,IAAkB,EAAlB,CADkB;aAAtB;AAGA,mBAAO,IAAI,OAAJ,CAAY,UAAU,OAAV,EAAmB,MAAnB,EAA2B;AAC1C,oBAAI,QAAQ,MAAR,EAAgB,OAAhB,CAAJ,EAA8B;AAC1B,0BAAK;AACD,gCAAQ;AACJ,oCAAQ,QAAQ,MAAR,EAAgB,OAAhB,CAAR;yBADJ;qBADJ,EAIG,MAJH,EAIW,eAJX,EAI4B,OAJ5B,EAKC,IALD,CAKM,OALN,EAKe,MALf,EAD0B;iBAA9B,MAOO;;AACH,4BAAI,OAAO,MAAP,KAAkB,UAAlB,EAA8B;AAC9B,gCAAI;AACA,yCAAS,QAAT,CADA;6BAAJ,CAEE,OAAO,CAAP,EAAU;AACR,uCAAO,CAAP,EADQ;AAER;;kCAFQ;6BAAV;yBAHN;AAQA,4BAAM,UAAU,UAAU,IAAV,CAAe,MAAf,EAAuB,OAAvB,CAAV;;AAEN,gCAAQ,SAAR,GAAoB;mCAAK,MAAK,CAAL,EAAQ,MAAR,EAAgB,eAAhB,EAAiC,OAAjC,EAA0C,IAA1C,CAA+C,OAA/C,EAAwD,MAAxD;yBAAL;AACpB,gCAAQ,eAAR,GAA0B,aAAK;AAC3B,gCAAI,MAAM,aAAa,CAAb,EAAgB,MAAhB,EAAwB,EAAE,MAAF,CAAS,MAAT,EAAiB,MAAzC,EAAiD,OAAjD,CAAN,CADuB;AAE3B,gCAAI,GAAJ,EAAS;;;;AAIL,wCAAQ,SAAR,GAAoB,aAAK;AACrB,2CAAO,GAAP,EADqB;iCAAL,CAJf;6BAAT;yBAFsB;AAW1B,gCAAQ,OAAR,GAAkB,aAAK;AACnB,8BAAE,cAAF;AADmB,kCAEnB,CAAO,CAAP,EAFmB;yBAAL;AAIlB,gCAAQ,SAAR,GAAoB,aAAK;AACrB,gCAAM,SAAS,IAAI,OAAJ,CAAY,UAAU,GAAV,EAAe,GAAf,EAAoB;;;;;;AAM3C,wCAAQ,SAAR,GAAoB,UAAC,EAAD,EAAQ;AACxB,0CAAK,EAAL,EAAS,MAAT,EAAiB,eAAjB,EAAkC,OAAlC,EACK,IADL,CACU,GADV,EACe,GADf,EADwB;iCAAR,CANuB;AAU3C,wCAAQ,OAAR,GAAkB;2CAAK,IAAI,CAAJ;iCAAL,CAVyB;6BAApB,CAArB,CADe;AAarB,8BAAE,MAAF,GAAW,MAAX,CAbqB;AAcrB,mCAAO,CAAP,EAdqB;yBAAL;wBA3BjB;;;iBAPP;aADe,CAAnB,CATqB;SAAnB;;AAgEN,gBAAQ,iBAAU,MAAV,EAAkB;AACtB,mBAAO,IAAI,OAAJ,CAAY,UAAU,OAAV,EAAmB,MAAnB,EAA2B;AAC1C,oBAAM,UAAU,UAAU,cAAV,CAAyB,MAAzB,CAAV;;AADoC,uBAG1C,CAAQ,SAAR,GAAoB;2BAAK,QAAQ,CAAR;iBAAL,CAHsB;AAI1C,wBAAQ,OAAR,GAAkB;2BAAK,OAAO,CAAP;iBAAL;AAJwB,uBAK1C,CAAQ,SAAR,GAAoB,aAAK;;AAErB,wBAAI,EAAE,UAAF,KAAiB,IAAjB,IAAyB,OAAO,KAAP,KAAiB,WAAjB,GAA+B,CAAxD,GAA4D,IAAI,KAAJ,CAAU,CAAV,EAAa,EAAC,KAAK,aAAU,MAAV,EAAkB,IAAlB,EAAwB;AACvG,mCAAO,SAAS,YAAT,GAAwB,IAAxB,GAA+B,OAAO,IAAP,CAA/B,CADgG;yBAAxB,EAAnB,CAA5D,CAFiB;AAKrB,wBAAM,SAAS,IAAI,OAAJ,CAAY,UAAU,GAAV,EAAe,GAAf,EAAoB;;;;;;AAM3C,gCAAQ,SAAR,GAAoB,cAAM;;AAEtB,gCAAI,EAAE,gBAAgB,EAAhB,CAAF,EAAuB;AACvB,mCAAG,UAAH,GAAgB,EAAE,UAAF,CADO;6BAA3B;;AAIA,gCAAI,EAAE,gBAAgB,EAAhB,CAAF,EAAuB;AACvB,mCAAG,UAAH,GAAgB,EAAE,UAAF,CADO;6BAA3B;;AAIA,gCAAI,EAAJ,EAVsB;yBAAN,CANuB;AAkB3C,gCAAQ,OAAR,GAAkB;mCAAK,IAAI,CAAJ;yBAAL,CAlByB;qBAApB,CAArB,CALe;AAyBrB,sBAAE,MAAF,GAAW,MAAX,CAzBqB;AA0BrB,2BAAO,CAAP,EA1BqB;iBAAL,CALsB;aAA3B,CAAnB,CADsB;SAAlB;;AAqCR,aAAK,aAAU,MAAV,EAAkB,MAAlB,EAA0B;AAC3B,mBAAO,IAAI,OAAJ,CAAY,UAAU,OAAV,EAAmB,MAAnB,EAA2B;AAC1C,oBAAI;AACA,4BAAQ,UAAU,GAAV,CAAc,MAAd,EAAsB,MAAtB,CAAR,EADA;iBAAJ,CAEE,OAAO,CAAP,EAAU;AACR,2BAAO,CAAP,EADQ;iBAAV;aAHa,CAAnB,CAD2B;SAA1B;KAvGH,CArmBQ;;AAutBd,QAAI,OAAO,MAAP,KAAkB,WAAlB,IAAiC,OAAO,OAAO,OAAP,KAAmB,WAA1B,EAAuC;AACxE,eAAO,OAAP,GAAiB,EAAjB,CADwE;KAA5E,MAEO,IAAI,OAAO,MAAP,KAAkB,UAAlB,IAAgC,OAAO,GAAP,EAAY;AACnD,eAAO,YAAY;AAAE,mBAAO,EAAP,CAAF;SAAZ,CAAP,CADmD;KAAhD,MAEA;AACH,cAAM,EAAN,GAAW,EAAX,CADG;KAFA;CAztBV,EA8tBC,IA9tBD,CAAD","file":"db.min.js","sourcesContent":["(function (local) {\r\n    'use strict';\r\n\r\n    const IDBKeyRange = local.IDBKeyRange || local.webkitIDBKeyRange;\r\n    const transactionModes = {\r\n        readonly: 'readonly',\r\n        readwrite: 'readwrite'\r\n    };\r\n    const hasOwn = Object.prototype.hasOwnProperty;\r\n    const defaultMapper = x => x;\r\n\r\n    const indexedDB = local.indexedDB || local.webkitIndexedDB ||\r\n        local.mozIndexedDB || local.oIndexedDB || local.msIndexedDB ||\r\n        local.shimIndexedDB || (function () {\r\n            throw new Error('IndexedDB required');\r\n        }());\r\n\r\n    const dbCache = {};\r\n    const serverEvents = ['abort', 'error', 'versionchange'];\r\n\r\n    function mongoDBToKeyRangeArgs (opts) {\r\n        const keys = Object.keys(opts).sort();\r\n        if (keys.length === 1) {\r\n            const key = keys[0];\r\n            const val = opts[key];\r\n            let name, inclusive;\r\n            switch (key) {\r\n            case 'eq': name = 'only'; break;\r\n            case 'gt':\r\n                name = 'lowerBound';\r\n                inclusive = true;\r\n                break;\r\n            case 'lt':\r\n                name = 'upperBound';\r\n                inclusive = true;\r\n                break;\r\n            case 'gte': name = 'lowerBound'; break;\r\n            case 'lte': name = 'upperBound'; break;\r\n            default: throw new TypeError('`' + key + '` is not a valid key');\r\n            }\r\n            return [name, [val, inclusive]];\r\n        }\r\n        const x = opts[keys[0]];\r\n        const y = opts[keys[1]];\r\n        const pattern = keys.join('-');\r\n\r\n        switch (pattern) {\r\n        case 'gt-lt': case 'gt-lte': case 'gte-lt': case 'gte-lte':\r\n            return ['bound', [x, y, keys[0] === 'gt', keys[1] === 'lt']];\r\n        default: throw new TypeError(\r\n          '`' + pattern + '` are conflicted keys'\r\n        );\r\n        }\r\n    }\r\n    function mongoifyKey (key) {\r\n        if (key && typeof key === 'object' && !(key instanceof IDBKeyRange)) {\r\n            let [type, args] = mongoDBToKeyRangeArgs(key);\r\n            return IDBKeyRange[type](...args);\r\n        }\r\n        return key;\r\n    }\r\n\r\n    const IndexQuery = function (table, db, indexName, preexistingError) {\r\n        let modifyObj = null;\r\n\r\n        const runQuery = function (type, args, cursorType, direction, limitRange, filters, mapper) {\r\n            return new Promise(function (resolve, reject) {\r\n                let keyRange;\r\n                try {\r\n                    keyRange = type ? IDBKeyRange[type](...args) : null;\r\n                } catch (e) {\r\n                    reject(e);\r\n                    return;\r\n                }\r\n                let results = [];\r\n                const indexArgs = [keyRange];\r\n                let counter = 0;\r\n\r\n                const transaction = db.transaction(table, modifyObj ? transactionModes.readwrite : transactionModes.readonly);\r\n                transaction.oncomplete = () => resolve(results);\r\n                transaction.onerror = e => reject(e);\r\n                transaction.onabort = e => reject(e);\r\n\r\n                const store = transaction.objectStore(table); // if bad, db.transaction will reject first\r\n                const index = indexName ? store.index(indexName) : store;\r\n\r\n                limitRange = limitRange || null;\r\n                filters = filters || [];\r\n                if (cursorType !== 'count') {\r\n                    indexArgs.push(direction || 'next');\r\n                }\r\n\r\n                // Create a function that will set in the modifyObj properties into\r\n                // the passed record.\r\n                const modifyKeys = modifyObj ? Object.keys(modifyObj) : [];\r\n\r\n                const modifyRecord = function (record) {\r\n                    modifyKeys.forEach(key => {\r\n                        let val = modifyObj[key];\r\n                        if (typeof val === 'function') { val = val(record); }\r\n                        record[key] = val;\r\n                    });\r\n                    return record;\r\n                };\r\n\r\n                index[cursorType](...indexArgs).onsuccess = function (e) {\r\n                    const cursor = e.target.result;\r\n                    if (typeof cursor === 'number') {\r\n                        results = cursor;\r\n                    } else if (cursor) {\r\n                        if (limitRange !== null && limitRange[0] > counter) {\r\n                            counter = limitRange[0];\r\n                            cursor.advance(limitRange[0]);\r\n                        } else if (limitRange !== null && counter >= (limitRange[0] + limitRange[1])) {\r\n                            // Out of limit range... skip\r\n                        } else {\r\n                            let matchFilter = true;\r\n                            let result = 'value' in cursor ? cursor.value : cursor.key;\r\n\r\n                            filters.forEach(function (filter) {\r\n                                if (!filter || !filter.length) {\r\n                                    // Invalid filter do nothing\r\n                                } else if (filter.length === 2) {\r\n                                    matchFilter = matchFilter && (result[filter[0]] === filter[1]);\r\n                                } else {\r\n                                    matchFilter = matchFilter && filter[0](result);\r\n                                }\r\n                            });\r\n\r\n                            if (matchFilter) {\r\n                                counter++;\r\n                                // If we're doing a modify, run it now\r\n                                if (modifyObj) {\r\n                                    try {\r\n                                        result = modifyRecord(result);\r\n                                    } catch (err) {\r\n                                        reject(err);\r\n                                        return;\r\n                                    }\r\n                                    cursor.update(result);\r\n                                }\r\n                                try {\r\n                                    results.push(mapper(result));\r\n                                } catch (err) {\r\n                                    reject(err);\r\n                                    return;\r\n                                }\r\n                            }\r\n                            cursor.continue();\r\n                        }\r\n                    }\r\n                };\r\n            });\r\n        };\r\n\r\n        const Query = function (type, args, queuedError) {\r\n            let direction = 'next';\r\n            let cursorType = 'openCursor';\r\n            const filters = [];\r\n            let limitRange = null;\r\n            let mapper = defaultMapper;\r\n            let unique = false;\r\n            const error = preexistingError || queuedError;\r\n\r\n            const execute = function () {\r\n                if (error) {\r\n                    return Promise.reject(error);\r\n                }\r\n                return runQuery(type, args, cursorType, unique ? direction + 'unique' : direction, limitRange, filters, mapper);\r\n            };\r\n\r\n            const limit = function (...args) {\r\n                limitRange = args.slice(0, 2);\r\n                if (limitRange.length === 1) {\r\n                    limitRange.unshift(0);\r\n                }\r\n\r\n                return {\r\n                    execute\r\n                };\r\n            };\r\n            const count = function () {\r\n                direction = null;\r\n                cursorType = 'count';\r\n\r\n                return {\r\n                    execute\r\n                };\r\n            };\r\n\r\n            const keys = function () {\r\n                cursorType = 'openKeyCursor';\r\n\r\n                return {\r\n                    desc,\r\n                    execute,\r\n                    filter,\r\n                    distinct,\r\n                    map\r\n                };\r\n            };\r\n            const filter = function (...args) {\r\n                filters.push(args.slice(0, 2));\r\n\r\n                return {\r\n                    keys,\r\n                    execute,\r\n                    filter,\r\n                    desc,\r\n                    distinct,\r\n                    modify,\r\n                    limit,\r\n                    map\r\n                };\r\n            };\r\n            const desc = function () {\r\n                direction = 'prev';\r\n\r\n                return {\r\n                    keys,\r\n                    execute,\r\n                    filter,\r\n                    distinct,\r\n                    modify,\r\n                    map\r\n                };\r\n            };\r\n            const distinct = function () {\r\n                unique = true;\r\n                return {\r\n                    keys,\r\n                    count,\r\n                    execute,\r\n                    filter,\r\n                    desc,\r\n                    modify,\r\n                    map\r\n                };\r\n            };\r\n            const modify = function (update) {\r\n                modifyObj = update && typeof update === 'object' ? update : null;\r\n                return {\r\n                    execute\r\n                };\r\n            };\r\n            const map = function (fn) {\r\n                mapper = fn;\r\n\r\n                return {\r\n                    execute,\r\n                    count,\r\n                    keys,\r\n                    filter,\r\n                    desc,\r\n                    distinct,\r\n                    modify,\r\n                    limit,\r\n                    map\r\n                };\r\n            };\r\n\r\n            return {\r\n                execute,\r\n                count,\r\n                keys,\r\n                filter,\r\n                desc,\r\n                distinct,\r\n                modify,\r\n                limit,\r\n                map\r\n            };\r\n        };\r\n\r\n        ['only', 'bound', 'upperBound', 'lowerBound'].forEach((name) => {\r\n            this[name] = function () {\r\n                return Query(name, arguments);\r\n            };\r\n        });\r\n\r\n        this.range = function (opts) {\r\n            let error;\r\n            let keyRange = [null, null];\r\n            try {\r\n                keyRange = mongoDBToKeyRangeArgs(opts);\r\n            } catch (e) {\r\n                error = e;\r\n            }\r\n            return Query(...keyRange, error);\r\n        };\r\n\r\n        this.filter = function (...args) {\r\n            const query = Query(null, null);\r\n            return query.filter(...args);\r\n        };\r\n\r\n        this.all = function () {\r\n            return this.filter();\r\n        };\r\n    };\r\n\r\n    const Server = function (db, name, noServerMethods, version) {\r\n        let closed = false;\r\n\r\n        this.getIndexedDB = () => db;\r\n        this.isClosed = () => closed;\r\n\r\n        this.add = function (table, ...args) {\r\n            return new Promise(function (resolve, reject) {\r\n                if (closed) {\r\n                    reject(new Error('Database has been closed'));\r\n                    return;\r\n                }\r\n\r\n                const records = args.reduce(function (records, aip) {\r\n                    return records.concat(aip);\r\n                }, []);\r\n\r\n                const transaction = db.transaction(table, transactionModes.readwrite);\r\n                transaction.oncomplete = () => resolve(records, this);\r\n                transaction.onerror = e => {\r\n                    // prevent Firefox from throwing a ConstraintError and aborting (hard)\r\n                    // https://bugzilla.mozilla.org/show_bug.cgi?id=872873\r\n                    e.preventDefault();\r\n                    reject(e);\r\n                };\r\n                transaction.onabort = e => reject(e);\r\n\r\n                const store = transaction.objectStore(table);\r\n                records.forEach(function (record) {\r\n                    let req;\r\n                    if (record.item && record.key) {\r\n                        const key = record.key;\r\n                        record = record.item;\r\n                        req = store.add(record, key); // Safe to add since in readwrite\r\n                    } else {\r\n                        req = store.add(record);\r\n                    }\r\n\r\n                    req.onsuccess = function (e) {\r\n                        const target = e.target;\r\n                        let keyPath = target.source.keyPath;\r\n                        if (keyPath === null) {\r\n                            keyPath = '__id__';\r\n                        }\r\n                        Object.defineProperty(record, keyPath, {\r\n                            value: target.result,\r\n                            enumerable: true\r\n                        });\r\n                    };\r\n                });\r\n            });\r\n        };\r\n\r\n        this.update = function (table, ...args) {\r\n            return new Promise(function (resolve, reject) {\r\n                if (closed) {\r\n                    reject(new Error('Database has been closed'));\r\n                    return;\r\n                }\r\n\r\n                const transaction = db.transaction(table, transactionModes.readwrite);\r\n                transaction.oncomplete = () => resolve(records, this);\r\n                transaction.onerror = e => reject(e);\r\n                transaction.onabort = e => reject(e);\r\n\r\n                const store = transaction.objectStore(table);\r\n                const records = args.reduce(function (records, aip) {\r\n                    return records.concat(aip);\r\n                }, []);\r\n                records.forEach(function (record) {\r\n                    if (record.item && record.key) {\r\n                        const key = record.key;\r\n                        record = record.item;\r\n                        store.put(record, key);\r\n                    } else {\r\n                        store.put(record);\r\n                    }\r\n                });\r\n            });\r\n        };\r\n\r\n        this.put = function (...args) {\r\n            return this.update(...args);\r\n        };\r\n\r\n        this.remove = function (table, key) {\r\n            return new Promise(function (resolve, reject) {\r\n                if (closed) {\r\n                    reject(new Error('Database has been closed'));\r\n                    return;\r\n                }\r\n                const transaction = db.transaction(table, transactionModes.readwrite);\r\n                transaction.oncomplete = () => resolve(key);\r\n                transaction.onerror = e => reject(e);\r\n                transaction.onabort = e => reject(e);\r\n\r\n                const store = transaction.objectStore(table);\r\n                store.delete(key);\r\n            });\r\n        };\r\n\r\n        this.delete = function (...args) {\r\n            return this.remove(...args);\r\n        };\r\n\r\n        this.clear = function (table) {\r\n            return new Promise(function (resolve, reject) {\r\n                if (closed) {\r\n                    reject(new Error('Database has been closed'));\r\n                    return;\r\n                }\r\n                const transaction = db.transaction(table, transactionModes.readwrite);\r\n                transaction.oncomplete = () => resolve();\r\n                transaction.onerror = e => reject(e);\r\n                transaction.onabort = e => reject(e);\r\n\r\n                const store = transaction.objectStore(table);\r\n                store.clear();\r\n            });\r\n        };\r\n\r\n        this.close = function () {\r\n            return new Promise(function (resolve, reject) {\r\n                if (closed) {\r\n                    reject(new Error('Database has been closed'));\r\n                }\r\n                db.close();\r\n                closed = true;\r\n                delete dbCache[name][version];\r\n                resolve();\r\n            });\r\n        };\r\n\r\n        this.get = function (table, key) {\r\n            return new Promise(function (resolve, reject) {\r\n                if (closed) {\r\n                    reject(new Error('Database has been closed'));\r\n                    return;\r\n                }\r\n                const transaction = db.transaction(table);\r\n                transaction.onerror = e => reject(e);\r\n                transaction.onabort = e => reject(e);\r\n\r\n                const store = transaction.objectStore(table);\r\n\r\n                try {\r\n                    key = mongoifyKey(key);\r\n                } catch (e) {\r\n                    reject(e);\r\n                    return;\r\n                }\r\n                const req = store.get(key);\r\n                req.onsuccess = e => resolve(e.target.result);\r\n            });\r\n        };\r\n\r\n        this.query = function (table, index) {\r\n            const error = closed ? new Error('Database has been closed') : null;\r\n            return new IndexQuery(table, db, index, error); // Does not throw by itself\r\n        };\r\n\r\n        this.count = function (table, key) {\r\n            return new Promise((resolve, reject) => {\r\n                if (closed) {\r\n                    reject(new Error('Database has been closed'));\r\n                    return;\r\n                }\r\n                const transaction = db.transaction(table);\r\n                transaction.onerror = e => reject(e);\r\n                transaction.onabort = e => reject(e);\r\n\r\n                const store = transaction.objectStore(table);\r\n                try {\r\n                    key = mongoifyKey(key);\r\n                } catch (e) {\r\n                    reject(e);\r\n                    return;\r\n                }\r\n                const req = key === undefined ? store.count() : store.count(key);\r\n                req.onsuccess = e => resolve(e.target.result);\r\n            });\r\n        };\r\n\r\n        this.addEventListener = function (eventName, handler) {\r\n            if (!serverEvents.includes(eventName)) {\r\n                throw new Error('Unrecognized event type ' + eventName);\r\n            }\r\n            db.addEventListener(eventName, handler);\r\n        };\r\n\r\n        this.removeEventListener = function (eventName, handler) {\r\n            if (!serverEvents.includes(eventName)) {\r\n                throw new Error('Unrecognized event type ' + eventName);\r\n            }\r\n            db.removeEventListener(eventName, handler);\r\n        };\r\n\r\n        serverEvents.forEach(function (evName) {\r\n            this[evName] = function (handler) {\r\n                this.addEventListener(evName, handler);\r\n                return this;\r\n            };\r\n        }, this);\r\n\r\n        if (noServerMethods) {\r\n            return;\r\n        }\r\n\r\n        let err;\r\n        [].some.call(db.objectStoreNames, storeName => {\r\n            if (this[storeName]) {\r\n                err = new Error('The store name, \"' + storeName + '\", which you have attempted to load, conflicts with db.js method names.\"');\r\n                this.close();\r\n                return true;\r\n            }\r\n            this[storeName] = {};\r\n            const keys = Object.keys(this);\r\n            keys.filter(key => !(([...serverEvents, 'close', 'addEventListener', 'removeEventListener']).includes(key)))\r\n                .map(key =>\r\n                    this[storeName][key] = (...args) => this[key](storeName, ...args)\r\n                );\r\n        });\r\n        return err;\r\n    };\r\n\r\n    const createSchema = function (e, schema, db, server, version) {\r\n        if (!schema || schema.length === 0) {\r\n            return;\r\n        }\r\n\r\n        for (let i = 0; i < db.objectStoreNames.length; i++) {\r\n            const name = db.objectStoreNames[i];\r\n            if (!hasOwn.call(schema, name)) {\r\n                // Errors for which we are not concerned and why:\r\n                // `InvalidStateError` - We are in the upgrade transaction.\r\n                // `TransactionInactiveError` (as by the upgrade having already\r\n                //      completed or somehow aborting) - since we've just started and\r\n                //      should be without risk in this loop\r\n                // `NotFoundError` - since we are iterating the dynamically updated\r\n                //      `objectStoreNames`\r\n                e.currentTarget.transaction.db.deleteObjectStore(name);\r\n            }\r\n        }\r\n\r\n        let ret;\r\n        Object.keys(schema).some(function (tableName) {\r\n            const table = schema[tableName];\r\n            let store;\r\n            if (db.objectStoreNames.contains(tableName)) {\r\n                store = e.currentTarget.transaction.objectStore(tableName); // Shouldn't throw\r\n            } else {\r\n                // Errors for which we are not concerned and why:\r\n                // `InvalidStateError` - We are in the upgrade transaction.\r\n                // `ConstraintError` - We are just starting (and probably never too large anyways) for a key generator.\r\n                // `ConstraintError` - The above condition should prevent the name already existing.\r\n                //\r\n                // Possible errors:\r\n                // `TransactionInactiveError` - if the upgrade had already aborted,\r\n                //      e.g., from a previous `QuotaExceededError` which is supposed to nevertheless return\r\n                //      the store but then abort the transaction.\r\n                // `SyntaxError` - if an invalid `table.key.keyPath` is supplied.\r\n                // `InvalidAccessError` - if `table.key.autoIncrement` is `true` and `table.key.keyPath` is an\r\n                //      empty string or any sequence (empty or otherwise).\r\n                try {\r\n                    store = db.createObjectStore(tableName, table.key);\r\n                } catch (err) {\r\n                    // db.close();\r\n                    // delete dbCache[server][version];\r\n                    ret = err;\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            Object.keys(table.indexes || {}).some(function (indexKey) {\r\n                try {\r\n                    store.index(indexKey);\r\n                } catch (err) {\r\n                    let index = table.indexes[indexKey];\r\n                    index = index && typeof index === 'object' ? index : {};\r\n                    // Errors for which we are not concerned and why:\r\n                    // `InvalidStateError` - We are in the upgrade transaction and store found above should not have already been deleted.\r\n                    // `ConstraintError` - We have already tried getting the index, so it shouldn't already exist\r\n                    //\r\n                    // Possible errors:\r\n                    // `TransactionInactiveError` - if the upgrade had already aborted,\r\n                    //      e.g., from a previous `QuotaExceededError` which is supposed to nevertheless return\r\n                    //      the index object but then abort the transaction.\r\n                    // `SyntaxError` - If the `keyPath` (second argument) is an invalid key path\r\n                    // `InvalidAccessError` - If `multiEntry` on `index` is `true` and\r\n                    //                          `keyPath` (second argument) is a sequence\r\n                    try {\r\n                        store.createIndex(indexKey, index.keyPath || index.key || indexKey, index);\r\n                    } catch (err2) {\r\n                        // db.close();\r\n                        // delete dbCache[server][version];\r\n                        ret = err2;\r\n                        return true;\r\n                    }\r\n                }\r\n            });\r\n        });\r\n        return ret;\r\n    };\r\n\r\n    const open = function (e, server, noServerMethods, version) {\r\n        const db = e.target.result;\r\n        dbCache[server][version] = db;\r\n\r\n        const s = new Server(db, server, noServerMethods, version);\r\n        return s instanceof Error ? Promise.reject(s) : Promise.resolve(s);\r\n    };\r\n\r\n    const db = {\r\n        version: '0.14.0',\r\n        open: function (options) {\r\n            let server = options.server;\r\n            let version = options.version || 1;\r\n            let schema = options.schema;\r\n            let noServerMethods = options.noServerMethods;\r\n\r\n            if (!dbCache[server]) {\r\n                dbCache[server] = {};\r\n            }\r\n            return new Promise(function (resolve, reject) {\r\n                if (dbCache[server][version]) {\r\n                    open({\r\n                        target: {\r\n                            result: dbCache[server][version]\r\n                        }\r\n                    }, server, noServerMethods, version)\r\n                    .then(resolve, reject);\r\n                } else {\r\n                    if (typeof schema === 'function') {\r\n                        try {\r\n                            schema = schema();\r\n                        } catch (e) {\r\n                            reject(e);\r\n                            return;\r\n                        }\r\n                    }\r\n                    const request = indexedDB.open(server, version);\r\n\r\n                    request.onsuccess = e => open(e, server, noServerMethods, version).then(resolve, reject);\r\n                    request.onupgradeneeded = e => {\r\n                        let err = createSchema(e, schema, e.target.result, server, version);\r\n                        if (err) {\r\n                            // Firefox throws `AbortError` errors when doing such operations as `close`\r\n                            //   within `upgradeneeded`, so we have known errors execute instead in `onsuccess`;\r\n                            //   see http://stackoverflow.com/questions/36225779/aborterror-within-indexeddb-upgradeneeded-event\r\n                            request.onsuccess = e => {\r\n                                reject(err);\r\n                            };\r\n                        }\r\n                    };\r\n                    request.onerror = e => {\r\n                        e.preventDefault(); // For Firefox BadVersion errors; see https://bugzilla.mozilla.org/show_bug.cgi?id=872873\r\n                        reject(e);\r\n                    };\r\n                    request.onblocked = e => {\r\n                        const resume = new Promise(function (res, rej) {\r\n                            // We overwrite handlers rather than make a new\r\n                            //   open() since the original request is still\r\n                            //   open and its onsuccess will still fire if\r\n                            //   the user unblocks by closing the blocking\r\n                            //   connection\r\n                            request.onsuccess = (ev) => {\r\n                                open(ev, server, noServerMethods, version)\r\n                                    .then(res, rej);\r\n                            };\r\n                            request.onerror = e => rej(e);\r\n                        });\r\n                        e.resume = resume;\r\n                        reject(e);\r\n                    };\r\n                }\r\n            });\r\n        },\r\n\r\n        delete: function (dbName) {\r\n            return new Promise(function (resolve, reject) {\r\n                const request = indexedDB.deleteDatabase(dbName); // Does not throw\r\n\r\n                request.onsuccess = e => resolve(e);\r\n                request.onerror = e => reject(e); // No errors currently\r\n                request.onblocked = e => {\r\n                    // The following addresses part of https://bugzilla.mozilla.org/show_bug.cgi?id=1220279\r\n                    e = e.newVersion === null || typeof Proxy === 'undefined' ? e : new Proxy(e, {get: function (target, name) {\r\n                        return name === 'newVersion' ? null : target[name];\r\n                    }});\r\n                    const resume = new Promise(function (res, rej) {\r\n                        // We overwrite handlers rather than make a new\r\n                        //   delete() since the original request is still\r\n                        //   open and its onsuccess will still fire if\r\n                        //   the user unblocks by closing the blocking\r\n                        //   connection\r\n                        request.onsuccess = ev => {\r\n                            // The following are needed currently by PhantomJS: https://github.com/ariya/phantomjs/issues/14141\r\n                            if (!('newVersion' in ev)) {\r\n                                ev.newVersion = e.newVersion;\r\n                            }\r\n\r\n                            if (!('oldVersion' in ev)) {\r\n                                ev.oldVersion = e.oldVersion;\r\n                            }\r\n\r\n                            res(ev);\r\n                        };\r\n                        request.onerror = e => rej(e);\r\n                    });\r\n                    e.resume = resume;\r\n                    reject(e);\r\n                };\r\n            });\r\n        },\r\n\r\n        cmp: function (param1, param2) {\r\n            return new Promise(function (resolve, reject) {\r\n                try {\r\n                    resolve(indexedDB.cmp(param1, param2));\r\n                } catch (e) {\r\n                    reject(e);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\r\n        module.exports = db;\r\n    } else if (typeof define === 'function' && define.amd) {\r\n        define(function () { return db; });\r\n    } else {\r\n        local.db = db;\r\n    }\r\n}(self));\r\n"]}